[
  {
    "File": "ComplianceTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ComplianceTests.cs",
    "LineNumber": 36,
    "Column": 1087,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var vehicleId = BusRepository.AddBus(bus);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            var driver = CreateTestDriver(\"_FERPA_Test\");\n\n            var vehicleId = BusRepository.AddBus(bus);\n            var driverId = DriverRepository.AddDriver(driver);\n"
  },
  {
    "File": "ComplianceTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ComplianceTests.cs",
    "LineNumber": 39,
    "Column": 1221,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "TestVehicleIds.Add(vehicleId);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            var driverId = DriverRepository.AddDriver(driver);\n\n            TestVehicleIds.Add(vehicleId);\n            TestDriverIds.Add(driverId);\n"
  },
  {
    "File": "ComplianceTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ComplianceTests.cs",
    "LineNumber": 42,
    "Column": 1315,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var route = CreateTestRoute(vehicleId, driverId, \"_PrivacyTest\");",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            TestDriverIds.Add(driverId);\n\n            var route = CreateTestRoute(vehicleId, driverId, \"_PrivacyTest\");\n            route.AMRiders = 25; // Number of students\n            route.PMRiders = 28;"
  },
  {
    "File": "ComplianceTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ComplianceTests.cs",
    "LineNumber": 100,
    "Column": 3804,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var vehicleId = BusRepository.AddBus(oldBus);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            var oldDriver = CreateTestDriver(\"_OldRecord\");\n\n            var vehicleId = BusRepository.AddBus(oldBus);\n            var driverId = DriverRepository.AddDriver(oldDriver);\n"
  },
  {
    "File": "ComplianceTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ComplianceTests.cs",
    "LineNumber": 103,
    "Column": 3944,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "TestVehicleIds.Add(vehicleId);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            var driverId = DriverRepository.AddDriver(oldDriver);\n\n            TestVehicleIds.Add(vehicleId);\n            TestDriverIds.Add(driverId);\n"
  },
  {
    "File": "ComplianceTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ComplianceTests.cs",
    "LineNumber": 107,
    "Column": 4078,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var oldRoute = CreateTestRoute(vehicleId, driverId, \"_OldRoute\");",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "\n            // Create old route data\n            var oldRoute = CreateTestRoute(vehicleId, driverId, \"_OldRoute\");\n            oldRoute.Date = DateTime.Today.AddYears(-5).ToString(\"yyyy-MM-dd\"); // 5 years old\n"
  },
  {
    "File": "ComplianceTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ComplianceTests.cs",
    "LineNumber": 181,
    "Column": 7083,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var vehicleId = BusRepository.AddBus(bus);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "                var driver = CreateTestDriver($\"_Export_{i}\");\n\n                var vehicleId = BusRepository.AddBus(bus);\n                var driverId = DriverRepository.AddDriver(driver);\n"
  },
  {
    "File": "ComplianceTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ComplianceTests.cs",
    "LineNumber": 184,
    "Column": 7219,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "vehicles.Add(vehicleId);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "                var driverId = DriverRepository.AddDriver(driver);\n\n                vehicles.Add(vehicleId);\n                drivers.Add(driverId);\n            }"
  },
  {
    "File": "ComplianceTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ComplianceTests.cs",
    "LineNumber": 230,
    "Column": 8841,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var vehicleId = BusRepository.AddBus(bus);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            // Simulate various system operations that should be audited\n            var Bus = CreateTestVehicle(\"_AuditTest\");\n            var vehicleId = BusRepository.AddBus(bus);\n            TestVehicleIds.Add(vehicleId);\n            auditEvents.Add($\"Bus Created: ID {vehicleId}\");"
  },
  {
    "File": "ComplianceTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ComplianceTests.cs",
    "LineNumber": 231,
    "Column": 8911,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "TestVehicleIds.Add(vehicleId);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            var Bus = CreateTestVehicle(\"_AuditTest\");\n            var vehicleId = BusRepository.AddBus(bus);\n            TestVehicleIds.Add(vehicleId);\n            auditEvents.Add($\"Bus Created: ID {vehicleId}\");\n"
  },
  {
    "File": "ComplianceTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ComplianceTests.cs",
    "LineNumber": 232,
    "Column": 8970,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "auditEvents.Add($\"Bus Created: ID {vehicleId}\");",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            var vehicleId = BusRepository.AddBus(bus);\n            TestVehicleIds.Add(vehicleId);\n            auditEvents.Add($\"Bus Created: ID {vehicleId}\");\n\n            var retrievedBus = BusRepository.GetBusById(vehicleId);"
  },
  {
    "File": "ComplianceTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ComplianceTests.cs",
    "LineNumber": 234,
    "Column": 9041,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var retrievedBus = BusRepository.GetBusById(vehicleId);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            auditEvents.Add($\"Bus Created: ID {vehicleId}\");\n\n            var retrievedBus = BusRepository.GetBusById(vehicleId);\n            auditEvents.Add($\"Bus Accessed: ID {vehicleId}\");\n"
  },
  {
    "File": "ComplianceTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ComplianceTests.cs",
    "LineNumber": 235,
    "Column": 9101,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "auditEvents.Add($\"Bus Accessed: ID {vehicleId}\");",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "\n            var retrievedBus = BusRepository.GetBusById(vehicleId);\n            auditEvents.Add($\"Bus Accessed: ID {vehicleId}\");\n\n            bus.Status = \"Maintenance\";"
  },
  {
    "File": "ComplianceTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ComplianceTests.cs",
    "LineNumber": 239,
    "Column": 9245,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "auditEvents.Add($\"Bus Updated: ID {vehicleId}\");",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            bus.Status = \"Maintenance\";\n            BusRepository.UpdateBus(bus);\n            auditEvents.Add($\"Bus Updated: ID {vehicleId}\");\n\n            // In production, audit trail should include:"
  },
  {
    "File": "ComplianceTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ComplianceTests.cs",
    "LineNumber": 282,
    "Column": 10800,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var vehicleId = BusRepository.AddBus(bus);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            var originalStatus = bus.Status;\n\n            var vehicleId = BusRepository.AddBus(bus);\n            TestVehicleIds.Add(vehicleId);\n"
  },
  {
    "File": "ComplianceTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ComplianceTests.cs",
    "LineNumber": 283,
    "Column": 10870,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "TestVehicleIds.Add(vehicleId);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "\n            var vehicleId = BusRepository.AddBus(bus);\n            TestVehicleIds.Add(vehicleId);\n\n            // Record original state"
  },
  {
    "File": "ComplianceTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ComplianceTests.cs",
    "LineNumber": 289,
    "Column": 11044,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "bus.VehicleID = vehicleId;",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "\n            // Modify the bus\n            bus.VehicleID = vehicleId;\n            bus.Status = \"Maintenance\";\n            busVIN = \"MODIFIED_VIN_123\";"
  },
  {
    "File": "ComplianceTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ComplianceTests.cs",
    "LineNumber": 295,
    "Column": 11235,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var modifiedBus = BusRepository.GetBusById(vehicleId);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            BusRepository.UpdateBus(bus);\n\n            var modifiedBus = BusRepository.GetBusById(vehicleId);\n            Assert.NotNull(modifiedBus);\n            var modifiedChecksum = CalculateSimpleChecksum(modifiedBus);"
  },
  {
    "File": "ComplianceTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ComplianceTests.cs",
    "LineNumber": 328,
    "Column": 12518,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var vehicleId = BusRepository.AddBus(bus);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            bus.LicenseNumber = \"ABC123\"; // Valid format\n\n            var vehicleId = BusRepository.AddBus(bus);\n            TestVehicleIds.Add(vehicleId);\n"
  },
  {
    "File": "ComplianceTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ComplianceTests.cs",
    "LineNumber": 329,
    "Column": 12588,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "TestVehicleIds.Add(vehicleId);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "\n            var vehicleId = BusRepository.AddBus(bus);\n            TestVehicleIds.Add(vehicleId);\n\n            // DOT requires certain Bus information to be maintained:"
  },
  {
    "File": "ComplianceTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ComplianceTests.cs",
    "LineNumber": 338,
    "Column": 12908,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var retrievedBus = BusRepository.GetBusById(vehicleId);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            // - Driver assignment records\n\n            var retrievedBus = BusRepository.GetBusById(vehicleId);\n            Assert.NotNull(retrievedBus);\n            Assert.False(string.IsNullOrEmpty(retrievedBus.VIN));"
  },
  {
    "File": "ComplianceTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ComplianceTests.cs",
    "LineNumber": 397,
    "Column": 15427,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var vehicleId = BusRepository.AddBus(bus);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            // Create fuel records (financial data)\n            var Bus = CreateTestVehicle(\"_Financial\");\n            var vehicleId = BusRepository.AddBus(bus);\n            TestVehicleIds.Add(vehicleId);\n"
  },
  {
    "File": "ComplianceTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ComplianceTests.cs",
    "LineNumber": 398,
    "Column": 15497,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "TestVehicleIds.Add(vehicleId);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            var Bus = CreateTestVehicle(\"_Financial\");\n            var vehicleId = BusRepository.AddBus(bus);\n            TestVehicleIds.Add(vehicleId);\n\n            var fuelRecord = new Fuel"
  },
  {
    "File": "ComplianceTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ComplianceTests.cs",
    "LineNumber": 402,
    "Column": 15596,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "VehicleFueledID = vehicleId,",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            var fuelRecord = new Fuel\n            {\n                VehicleFueledID = vehicleId,\n                FuelDate = DateTime.Today.AddMonths(-6).ToString(\"yyyy-MM-dd\"),\n                FuelLocation = \"Test Station\","
  },
  {
    "File": "ComplianceTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ComplianceTests.cs",
    "LineNumber": 33,
    "Column": 978,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "CreateTestVehicle",
    "MatchedText": "CreateTestVehicle",
    "LineContent": "var Bus = CreateTestVehicle(\"_FERPA_Test\");",
    "SuggestedFix": "Method name - should be CreateTestBus",
    "Context": "\n            // Create route with student ridership data\n            var Bus = CreateTestVehicle(\"_FERPA_Test\");\n            var driver = CreateTestDriver(\"_FERPA_Test\");\n"
  },
  {
    "File": "ComplianceTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ComplianceTests.cs",
    "LineNumber": 97,
    "Column": 3694,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "CreateTestVehicle",
    "MatchedText": "CreateTestVehicle",
    "LineContent": "var oldBus = CreateTestVehicle(\"_OldRecord\");",
    "SuggestedFix": "Method name - should be CreateTestBus",
    "Context": "\n            // Create old records that should be subject to retention policies\n            var oldBus = CreateTestVehicle(\"_OldRecord\");\n            var oldDriver = CreateTestDriver(\"_OldRecord\");\n"
  },
  {
    "File": "ComplianceTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ComplianceTests.cs",
    "LineNumber": 178,
    "Column": 6964,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "CreateTestVehicle",
    "MatchedText": "CreateTestVehicle",
    "LineContent": "var Bus = CreateTestVehicle($\"_Export_{i}\");",
    "SuggestedFix": "Method name - should be CreateTestBus",
    "Context": "            for (int i = 0; i < 5; i++)\n            {\n                var Bus = CreateTestVehicle($\"_Export_{i}\");\n                var driver = CreateTestDriver($\"_Export_{i}\");\n"
  },
  {
    "File": "ComplianceTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ComplianceTests.cs",
    "LineNumber": 229,
    "Column": 8792,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "CreateTestVehicle",
    "MatchedText": "CreateTestVehicle",
    "LineContent": "var Bus = CreateTestVehicle(\"_AuditTest\");",
    "SuggestedFix": "Method name - should be CreateTestBus",
    "Context": "\n            // Simulate various system operations that should be audited\n            var Bus = CreateTestVehicle(\"_AuditTest\");\n            var vehicleId = BusRepository.AddBus(bus);\n            TestVehicleIds.Add(vehicleId);"
  },
  {
    "File": "ComplianceTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ComplianceTests.cs",
    "LineNumber": 278,
    "Column": 10662,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "CreateTestVehicle",
    "MatchedText": "CreateTestVehicle",
    "LineContent": "var Bus = CreateTestVehicle(\"_IntegrityTest\");",
    "SuggestedFix": "Method name - should be CreateTestBus",
    "Context": "            _output.WriteLine(\"Testing data integrity auditing...\");\n\n            var Bus = CreateTestVehicle(\"_IntegrityTest\");\n            var originalVIN = bus.VIN;\n            var originalStatus = bus.Status;"
  },
  {
    "File": "ComplianceTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ComplianceTests.cs",
    "LineNumber": 324,
    "Column": 12347,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "CreateTestVehicle",
    "MatchedText": "CreateTestVehicle",
    "LineContent": "var Bus = CreateTestVehicle(\"_DOT_Compliance\");",
    "SuggestedFix": "Method name - should be CreateTestBus",
    "Context": "            _output.WriteLine(\"Testing DOT Bus inspection record compliance...\");\n\n            var Bus = CreateTestVehicle(\"_DOT_Compliance\");\n            busVIN = \"1HGCM82633A123456\"; // Valid format\n            bus.LicenseNumber = \"ABC123\"; // Valid format"
  },
  {
    "File": "ComplianceTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ComplianceTests.cs",
    "LineNumber": 396,
    "Column": 15378,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "CreateTestVehicle",
    "MatchedText": "CreateTestVehicle",
    "LineContent": "var Bus = CreateTestVehicle(\"_Financial\");",
    "SuggestedFix": "Method name - should be CreateTestBus",
    "Context": "\n            // Create fuel records (financial data)\n            var Bus = CreateTestVehicle(\"_Financial\");\n            var vehicleId = BusRepository.AddBus(bus);\n            TestVehicleIds.Add(vehicleId);"
  },
  {
    "File": "DisasterRecoveryTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\DisasterRecoveryTests.cs",
    "LineNumber": 153,
    "Column": 6366,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var vehicleId = BusRepository.AddBus(bus);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            {\n                var Bus = CreateTestVehicle($\"_FailureTest_{i}\");\n                var vehicleId = BusRepository.AddBus(bus);\n                TestVehicleIds.Add(vehicleId);\n                preFailureData.Add((\"bus\", vehicleId, $\"Bus {bus.VehicleNumber}\"));"
  },
  {
    "File": "DisasterRecoveryTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\DisasterRecoveryTests.cs",
    "LineNumber": 154,
    "Column": 6440,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "TestVehicleIds.Add(vehicleId);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "                var Bus = CreateTestVehicle($\"_FailureTest_{i}\");\n                var vehicleId = BusRepository.AddBus(bus);\n                TestVehicleIds.Add(vehicleId);\n                preFailureData.Add((\"bus\", vehicleId, $\"Bus {bus.VehicleNumber}\"));\n            }"
  },
  {
    "File": "DisasterRecoveryTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\DisasterRecoveryTests.cs",
    "LineNumber": 155,
    "Column": 6495,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "preFailureData.Add((\"bus\", vehicleId, $\"Bus {bus.VehicleNumber}\"));",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "                var vehicleId = BusRepository.AddBus(bus);\n                TestVehicleIds.Add(vehicleId);\n                preFailureData.Add((\"bus\", vehicleId, $\"Bus {bus.VehicleNumber}\"));\n            }\n"
  },
  {
    "File": "DisasterRecoveryTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\DisasterRecoveryTests.cs",
    "LineNumber": 224,
    "Column": 9290,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var vehicleId = BusRepository.AddBus(bus);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "\n            var Bus = CreateTestVehicle(\"_ConcurrentFailure\");\n            var vehicleId = BusRepository.AddBus(bus);\n            TestVehicleIds.Add(vehicleId);\n"
  },
  {
    "File": "DisasterRecoveryTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\DisasterRecoveryTests.cs",
    "LineNumber": 225,
    "Column": 9360,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "TestVehicleIds.Add(vehicleId);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            var Bus = CreateTestVehicle(\"_ConcurrentFailure\");\n            var vehicleId = BusRepository.AddBus(bus);\n            TestVehicleIds.Add(vehicleId);\n\n            var tasks = new List<Task>();"
  },
  {
    "File": "DisasterRecoveryTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\DisasterRecoveryTests.cs",
    "LineNumber": 243,
    "Column": 10066,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var v = BusRepository.GetBusById(vehicleId);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "                        {\n                            // Update Bus status\n                            var v = BusRepository.GetBusById(vehicleId);\n                            if (v != null)\n                            {"
  },
  {
    "File": "DisasterRecoveryTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\DisasterRecoveryTests.cs",
    "LineNumber": 258,
    "Column": 10721,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var v = BusRepository.GetBusById(vehicleId);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "                        {\n                            // Read Bus data\n                            var v = BusRepository.GetBusById(vehicleId);\n                            Assert.NotNull(v);\n"
  },
  {
    "File": "DisasterRecoveryTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\DisasterRecoveryTests.cs",
    "LineNumber": 298,
    "Column": 12190,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var finalBus = BusRepository.GetBusById(vehicleId);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "\n            // Verify final data integrity\n            var finalBus = BusRepository.GetBusById(vehicleId);\n            Assert.NotNull(finalBus);\n            Assert.False(string.IsNullOrEmpty(finalBus.VehicleNumber));"
  },
  {
    "File": "DisasterRecoveryTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\DisasterRecoveryTests.cs",
    "LineNumber": 413,
    "Column": 16456,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var vehicleId = BusRepository.AddBus(bus);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            // Create test data\n            var Bus = CreateTestVehicle(\"_ServiceDegradation\");\n            var vehicleId = BusRepository.AddBus(bus);\n            TestVehicleIds.Add(vehicleId);\n"
  },
  {
    "File": "DisasterRecoveryTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\DisasterRecoveryTests.cs",
    "LineNumber": 414,
    "Column": 16526,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "TestVehicleIds.Add(vehicleId);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            var Bus = CreateTestVehicle(\"_ServiceDegradation\");\n            var vehicleId = BusRepository.AddBus(bus);\n            TestVehicleIds.Add(vehicleId);\n\n            // Test various degradation scenarios"
  },
  {
    "File": "DisasterRecoveryTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\DisasterRecoveryTests.cs",
    "LineNumber": 423,
    "Column": 16907,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var result = BusRepository.GetBusById(vehicleId);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "                    // Simulate slow response by adding delay\n                    Task.Delay(100).Wait();\n                    var result = BusRepository.GetBusById(vehicleId);\n                    return result != null;\n                })},"
  },
  {
    "File": "DisasterRecoveryTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\DisasterRecoveryTests.cs",
    "LineNumber": 440,
    "Column": 17646,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "tasks.Add(Task.Run(() => BusRepository.GetBusById(vehicleId)));",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "                    for (int i = 0; i < 5; i++)\n                    {\n                        tasks.Add(Task.Run(() => BusRepository.GetBusById(vehicleId)));\n                    }\n                    var results = Task.WhenAll(tasks).Result;"
  },
  {
    "File": "DisasterRecoveryTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\DisasterRecoveryTests.cs",
    "LineNumber": 460,
    "Column": 18422,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var validBus = BusRepository.GetBusById(vehicleId);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "\n                    // Verify valid operations still work\n                    var validBus = BusRepository.GetBusById(vehicleId);\n                    return validBus != null;\n                })}"
  },
  {
    "File": "DisasterRecoveryTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\DisasterRecoveryTests.cs",
    "LineNumber": 512,
    "Column": 20394,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var vehicleIds = new List<int>();",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            };\n\n            var vehicleIds = new List<int>();\n            var originalChecksums = new Dictionary<int, string>();\n"
  },
  {
    "File": "DisasterRecoveryTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\DisasterRecoveryTests.cs",
    "LineNumber": 518,
    "Column": 20636,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var vehicleId = BusRepository.AddBus(bus);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            foreach (var Bus in integrityTestData)\n            {\n                var vehicleId = BusRepository.AddBus(bus);\n                vehicleIds.Add(vehicleId);\n                TestVehicleIds.Add(vehicleId);"
  },
  {
    "File": "DisasterRecoveryTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\DisasterRecoveryTests.cs",
    "LineNumber": 519,
    "Column": 20691,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "vehicleIds.Add(vehicleId);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            {\n                var vehicleId = BusRepository.AddBus(bus);\n                vehicleIds.Add(vehicleId);\n                TestVehicleIds.Add(vehicleId);\n"
  },
  {
    "File": "DisasterRecoveryTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\DisasterRecoveryTests.cs",
    "LineNumber": 519,
    "Column": 20706,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "vehicleIds.Add(vehicleId);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            {\n                var vehicleId = BusRepository.AddBus(bus);\n                vehicleIds.Add(vehicleId);\n                TestVehicleIds.Add(vehicleId);\n"
  },
  {
    "File": "DisasterRecoveryTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\DisasterRecoveryTests.cs",
    "LineNumber": 520,
    "Column": 20753,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "TestVehicleIds.Add(vehicleId);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "                var vehicleId = BusRepository.AddBus(bus);\n                vehicleIds.Add(vehicleId);\n                TestVehicleIds.Add(vehicleId);\n\n                var checksum = CalculateVehicleChecksum(bus);"
  },
  {
    "File": "DisasterRecoveryTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\DisasterRecoveryTests.cs",
    "LineNumber": 523,
    "Column": 20862,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "originalChecksums[vehicleId] = checksum;",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "\n                var checksum = CalculateVehicleChecksum(bus);\n                originalChecksums[vehicleId] = checksum;\n            }\n"
  },
  {
    "File": "DisasterRecoveryTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\DisasterRecoveryTests.cs",
    "LineNumber": 527,
    "Column": 20965,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "foreach (var vehicleId in vehicleIds)",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "\n            // Verify initial integrity\n            foreach (var vehicleId in vehicleIds)\n            {\n                var Bus = BusRepository.GetBusById(vehicleId);"
  },
  {
    "File": "DisasterRecoveryTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\DisasterRecoveryTests.cs",
    "LineNumber": 527,
    "Column": 20978,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "foreach (var vehicleId in vehicleIds)",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "\n            // Verify initial integrity\n            foreach (var vehicleId in vehicleIds)\n            {\n                var Bus = BusRepository.GetBusById(vehicleId);"
  },
  {
    "File": "DisasterRecoveryTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\DisasterRecoveryTests.cs",
    "LineNumber": 529,
    "Column": 21055,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var Bus = BusRepository.GetBusById(vehicleId);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            foreach (var vehicleId in vehicleIds)\n            {\n                var Bus = BusRepository.GetBusById(vehicleId);\n                Assert.NotNull(bus);\n                var currentChecksum = CalculateVehicleChecksum(bus);"
  },
  {
    "File": "DisasterRecoveryTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\DisasterRecoveryTests.cs",
    "LineNumber": 533,
    "Column": 21221,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "Assert.Equal(originalChecksums[vehicleId], currentChecksum);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "                var currentChecksum = CalculateVehicleChecksum(bus);\n\n                Assert.Equal(originalChecksums[vehicleId], currentChecksum);\n            }\n"
  },
  {
    "File": "DisasterRecoveryTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\DisasterRecoveryTests.cs",
    "LineNumber": 537,
    "Column": 21362,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var corruptedBus = BusRepository.GetBusById(vehicleIds[0]);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "\n            // Simulate data corruption\n            var corruptedBus = BusRepository.GetBusById(vehicleIds[0]);\n            Assert.NotNull(corruptedBus);\n            corruptedBusVIN = \"CORRUPTED_VIN\";"
  },
  {
    "File": "DisasterRecoveryTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\DisasterRecoveryTests.cs",
    "LineNumber": 544,
    "Column": 21674,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "Assert.NotEqual(originalChecksums[vehicleIds[0]], corruptedChecksum);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            // Detect corruption\n            var corruptedChecksum = CalculateVehicleChecksum(corruptedBus);\n            Assert.NotEqual(originalChecksums[vehicleIds[0]], corruptedChecksum);\n\n            // Verify other records remain intact"
  },
  {
    "File": "DisasterRecoveryTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\DisasterRecoveryTests.cs",
    "LineNumber": 547,
    "Column": 21793,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "for (int i = 1; i < vehicleIds.Count; i++)",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "\n            // Verify other records remain intact\n            for (int i = 1; i < vehicleIds.Count; i++)\n            {\n                var Bus = BusRepository.GetBusById(vehicleIds[i]);"
  },
  {
    "File": "DisasterRecoveryTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\DisasterRecoveryTests.cs",
    "LineNumber": 549,
    "Column": 21881,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var Bus = BusRepository.GetBusById(vehicleIds[i]);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            for (int i = 1; i < vehicleIds.Count; i++)\n            {\n                var Bus = BusRepository.GetBusById(vehicleIds[i]);\n                Assert.NotNull(bus);\n                var checksum = CalculateVehicleChecksum(bus);"
  },
  {
    "File": "DisasterRecoveryTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\DisasterRecoveryTests.cs",
    "LineNumber": 552,
    "Column": 22043,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "Assert.Equal(originalChecksums[vehicleIds[i]], checksum);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "                Assert.NotNull(bus);\n                var checksum = CalculateVehicleChecksum(bus);\n                Assert.Equal(originalChecksums[vehicleIds[i]], checksum);\n            }\n"
  },
  {
    "File": "DisasterRecoveryTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\DisasterRecoveryTests.cs",
    "LineNumber": 572,
    "Column": 22604,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var vehicleId = BusRepository.AddBus(bus);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            {\n                var Bus = CreateTestVehicle($\"_BackupTest_{i}\");\n                var vehicleId = BusRepository.AddBus(bus);\n                TestVehicleIds.Add(vehicleId);\n                vehicleCount++;"
  },
  {
    "File": "DisasterRecoveryTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\DisasterRecoveryTests.cs",
    "LineNumber": 573,
    "Column": 22678,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "TestVehicleIds.Add(vehicleId);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "                var Bus = CreateTestVehicle($\"_BackupTest_{i}\");\n                var vehicleId = BusRepository.AddBus(bus);\n                TestVehicleIds.Add(vehicleId);\n                vehicleCount++;\n            }"
  },
  {
    "File": "DisasterRecoveryTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\DisasterRecoveryTests.cs",
    "LineNumber": 79,
    "Column": 3284,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "CreateTestVehicle",
    "MatchedText": "CreateTestVehicle",
    "LineContent": "var originalBus = CreateTestVehicle(\"_RestoreTest_Original\");",
    "SuggestedFix": "Method name - should be CreateTestBus",
    "Context": "\n            // Create original data\n            var originalBus = CreateTestVehicle(\"_RestoreTest_Original\");\n            var originalDriver = CreateTestDriver(\"_RestoreTest_Original\");\n"
  },
  {
    "File": "DisasterRecoveryTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\DisasterRecoveryTests.cs",
    "LineNumber": 152,
    "Column": 6306,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "CreateTestVehicle",
    "MatchedText": "CreateTestVehicle",
    "LineContent": "var Bus = CreateTestVehicle($\"_FailureTest_{i}\");",
    "SuggestedFix": "Method name - should be CreateTestBus",
    "Context": "            for (int i = 0; i < 5; i++)\n            {\n                var Bus = CreateTestVehicle($\"_FailureTest_{i}\");\n                var vehicleId = BusRepository.AddBus(bus);\n                TestVehicleIds.Add(vehicleId);"
  },
  {
    "File": "DisasterRecoveryTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\DisasterRecoveryTests.cs",
    "LineNumber": 174,
    "Column": 7254,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "CreateTestVehicle",
    "MatchedText": "CreateTestVehicle",
    "LineContent": "var invalidBus = CreateTestVehicle(\"_Invalid\");",
    "SuggestedFix": "Method name - should be CreateTestBus",
    "Context": "            {\n                // Attempt operations that might fail\n                var invalidBus = CreateTestVehicle(\"_Invalid\");\n                invalidBus.VehicleNumber = null; // This might cause a failure\n                BusRepository.AddBus(invalidBus);"
  },
  {
    "File": "DisasterRecoveryTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\DisasterRecoveryTests.cs",
    "LineNumber": 187,
    "Column": 7768,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "CreateTestVehicle",
    "MatchedText": "CreateTestVehicle",
    "LineContent": "var nonExistentBus = CreateTestVehicle(\"_NonExistent\");",
    "SuggestedFix": "Method name - should be CreateTestBus",
    "Context": "            {\n                // Attempt to update non-existent record\n                var nonExistentBus = CreateTestVehicle(\"_NonExistent\");\n                nonExistentBus.VehicleID = -999;\n                BusRepository.UpdateBus(nonExistentBus);"
  },
  {
    "File": "DisasterRecoveryTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\DisasterRecoveryTests.cs",
    "LineNumber": 223,
    "Column": 9233,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "CreateTestVehicle",
    "MatchedText": "CreateTestVehicle",
    "LineContent": "var Bus = CreateTestVehicle(\"_ConcurrentFailure\");",
    "SuggestedFix": "Method name - should be CreateTestBus",
    "Context": "            _output.WriteLine(\"Testing concurrent failure recovery...\");\n\n            var Bus = CreateTestVehicle(\"_ConcurrentFailure\");\n            var vehicleId = BusRepository.AddBus(bus);\n            TestVehicleIds.Add(vehicleId);"
  },
  {
    "File": "DisasterRecoveryTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\DisasterRecoveryTests.cs",
    "LineNumber": 412,
    "Column": 16398,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "CreateTestVehicle",
    "MatchedText": "CreateTestVehicle",
    "LineContent": "var Bus = CreateTestVehicle(\"_ServiceDegradation\");",
    "SuggestedFix": "Method name - should be CreateTestBus",
    "Context": "\n            // Create test data\n            var Bus = CreateTestVehicle(\"_ServiceDegradation\");\n            var vehicleId = BusRepository.AddBus(bus);\n            TestVehicleIds.Add(vehicleId);"
  },
  {
    "File": "DisasterRecoveryTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\DisasterRecoveryTests.cs",
    "LineNumber": 507,
    "Column": 20226,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "CreateTestVehicle",
    "MatchedText": "CreateTestVehicle",
    "LineContent": "CreateTestVehicle(\"_Integrity_1\"),",
    "SuggestedFix": "Method name - should be CreateTestBus",
    "Context": "            var integrityTestData = new[]\n            {\n                CreateTestVehicle(\"_Integrity_1\"),\n                CreateTestVehicle(\"_Integrity_2\"),\n                CreateTestVehicle(\"_Integrity_3\")"
  },
  {
    "File": "DisasterRecoveryTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\DisasterRecoveryTests.cs",
    "LineNumber": 508,
    "Column": 20277,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "CreateTestVehicle",
    "MatchedText": "CreateTestVehicle",
    "LineContent": "CreateTestVehicle(\"_Integrity_2\"),",
    "SuggestedFix": "Method name - should be CreateTestBus",
    "Context": "            {\n                CreateTestVehicle(\"_Integrity_1\"),\n                CreateTestVehicle(\"_Integrity_2\"),\n                CreateTestVehicle(\"_Integrity_3\")\n            };"
  },
  {
    "File": "DisasterRecoveryTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\DisasterRecoveryTests.cs",
    "LineNumber": 509,
    "Column": 20328,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "CreateTestVehicle",
    "MatchedText": "CreateTestVehicle",
    "LineContent": "CreateTestVehicle(\"_Integrity_3\")",
    "SuggestedFix": "Method name - should be CreateTestBus",
    "Context": "                CreateTestVehicle(\"_Integrity_1\"),\n                CreateTestVehicle(\"_Integrity_2\"),\n                CreateTestVehicle(\"_Integrity_3\")\n            };\n"
  },
  {
    "File": "DisasterRecoveryTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\DisasterRecoveryTests.cs",
    "LineNumber": 571,
    "Column": 22545,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "CreateTestVehicle",
    "MatchedText": "CreateTestVehicle",
    "LineContent": "var Bus = CreateTestVehicle($\"_BackupTest_{i}\");",
    "SuggestedFix": "Method name - should be CreateTestBus",
    "Context": "            for (int i = 0; i < 10; i++)\n            {\n                var Bus = CreateTestVehicle($\"_BackupTest_{i}\");\n                var vehicleId = BusRepository.AddBus(bus);\n                TestVehicleIds.Add(vehicleId);"
  },
  {
    "File": "EndToEndWorkflowTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\EndToEndWorkflowTests.cs",
    "LineNumber": 31,
    "Column": 906,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var vehicleId = BusRepository.AddBus(bus);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            // 1. Create new bus\n            var Bus = CreateTestVehicle(\"_RouteWorkflow\");\n            var vehicleId = BusRepository.AddBus(bus);\n            TestVehicleIds.Add(vehicleId);\n            Assert.True(vehicleId > 0, \"Bus creation should succeed\");"
  },
  {
    "File": "EndToEndWorkflowTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\EndToEndWorkflowTests.cs",
    "LineNumber": 32,
    "Column": 976,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "TestVehicleIds.Add(vehicleId);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            var Bus = CreateTestVehicle(\"_RouteWorkflow\");\n            var vehicleId = BusRepository.AddBus(bus);\n            TestVehicleIds.Add(vehicleId);\n            Assert.True(vehicleId > 0, \"Bus creation should succeed\");\n            _output.WriteLine($\"✅ Created Bus with ID: {vehicleId}\");"
  },
  {
    "File": "EndToEndWorkflowTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\EndToEndWorkflowTests.cs",
    "LineNumber": 33,
    "Column": 1012,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "Assert.True(vehicleId > 0, \"Bus creation should succeed\");",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            var vehicleId = BusRepository.AddBus(bus);\n            TestVehicleIds.Add(vehicleId);\n            Assert.True(vehicleId > 0, \"Bus creation should succeed\");\n            _output.WriteLine($\"✅ Created Bus with ID: {vehicleId}\");\n"
  },
  {
    "File": "EndToEndWorkflowTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\EndToEndWorkflowTests.cs",
    "LineNumber": 34,
    "Column": 1115,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "_output.WriteLine($\"✅ Created Bus with ID: {vehicleId}\");",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            TestVehicleIds.Add(vehicleId);\n            Assert.True(vehicleId > 0, \"Bus creation should succeed\");\n            _output.WriteLine($\"✅ Created Bus with ID: {vehicleId}\");\n\n            // 2. Create new driver"
  },
  {
    "File": "EndToEndWorkflowTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\EndToEndWorkflowTests.cs",
    "LineNumber": 44,
    "Column": 1610,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var vehicleValidation = ValidationService.ValidateBusAvailability(vehicleId, DateTime.Today);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "\n            // 3. Validate Bus and driver availability\n            var vehicleValidation = ValidationService.ValidateBusAvailability(vehicleId, DateTime.Today);\n            var driverValidation = ValidationService.ValidateDriverAvailability(driverId, DateTime.Today);\n"
  },
  {
    "File": "EndToEndWorkflowTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\EndToEndWorkflowTests.cs",
    "LineNumber": 52,
    "Column": 2142,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var route = CreateTestRoute(vehicleId, driverId, \"_RouteWorkflow\");",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "\n            // 4. Create and assign route\n            var route = CreateTestRoute(vehicleId, driverId, \"_RouteWorkflow\");\n            var routeId = RouteRepository.AddRoute(route);\n            TestRouteIds.Add(routeId);"
  },
  {
    "File": "EndToEndWorkflowTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\EndToEndWorkflowTests.cs",
    "LineNumber": 72,
    "Column": 3207,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var retrievedBus = BusRepository.GetBusById(vehicleId);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "\n            // 7. Validate data consistency\n            var retrievedBus = BusRepository.GetBusById(vehicleId);\n            var retrievedDriver = DriverRepository.GetDriverById(driverId);\n            var retrievedRoute = RouteRepository.GetRouteById(routeId);"
  },
  {
    "File": "EndToEndWorkflowTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\EndToEndWorkflowTests.cs",
    "LineNumber": 79,
    "Column": 3524,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "Assert.Equal(vehicleId, retrievedRoute.AMVehicleID);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            Assert.NotNull(retrievedDriver);\n            Assert.NotNull(retrievedRoute);\n            Assert.Equal(vehicleId, retrievedRoute.AMVehicleID);\n            Assert.Equal(driverId, retrievedRoute.AMDriverID);\n"
  },
  {
    "File": "EndToEndWorkflowTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\EndToEndWorkflowTests.cs",
    "LineNumber": 93,
    "Column": 4074,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var vehicleId = BusRepository.AddBus(bus);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            // 1. Create test bus\n            var Bus = CreateTestVehicle(\"_MaintenanceWorkflow\");\n            var vehicleId = BusRepository.AddBus(bus);\n            TestVehicleIds.Add(vehicleId);\n            _output.WriteLine($\"✅ Created Bus with ID: {vehicleId}\");"
  },
  {
    "File": "EndToEndWorkflowTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\EndToEndWorkflowTests.cs",
    "LineNumber": 94,
    "Column": 4144,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "TestVehicleIds.Add(vehicleId);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            var Bus = CreateTestVehicle(\"_MaintenanceWorkflow\");\n            var vehicleId = BusRepository.AddBus(bus);\n            TestVehicleIds.Add(vehicleId);\n            _output.WriteLine($\"✅ Created Bus with ID: {vehicleId}\");\n"
  },
  {
    "File": "EndToEndWorkflowTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\EndToEndWorkflowTests.cs",
    "LineNumber": 95,
    "Column": 4212,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "_output.WriteLine($\"✅ Created Bus with ID: {vehicleId}\");",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            var vehicleId = BusRepository.AddBus(bus);\n            TestVehicleIds.Add(vehicleId);\n            _output.WriteLine($\"✅ Created Bus with ID: {vehicleId}\");\n\n            // 2. Bus health monitoring (simulate by checking availability)"
  },
  {
    "File": "EndToEndWorkflowTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\EndToEndWorkflowTests.cs",
    "LineNumber": 98,
    "Column": 4375,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var healthCheck = ValidationService.ValidateBusAvailability(vehicleId, DateTime.Today);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "\n            // 2. Bus health monitoring (simulate by checking availability)\n            var healthCheck = ValidationService.ValidateBusAvailability(vehicleId, DateTime.Today);\n            Assert.True(healthCheck.IsValid, \"Bus should be healthy and available\");\n            _output.WriteLine(\"✅ Bus health check passed\");"
  },
  {
    "File": "EndToEndWorkflowTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\EndToEndWorkflowTests.cs",
    "LineNumber": 105,
    "Column": 4693,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "VehicleID = vehicleId,",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            var maintenance = new Maintenance\n            {\n                VehicleID = vehicleId,\n                Date = DateTime.Today.AddDays(7).ToString(\"yyyy-MM-dd\"),\n                MaintenanceCompleted = \"SCHEDULED - Oil change and inspection\","
  },
  {
    "File": "EndToEndWorkflowTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\EndToEndWorkflowTests.cs",
    "LineNumber": 125,
    "Column": 5910,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var availabilityCheck = ValidationService.ValidateBusAvailability(vehicleId, maintenanceDate);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            // 5. Check Bus availability during maintenance period\n            var maintenanceDate = DateTime.Today.AddDays(7);\n            var availabilityCheck = ValidationService.ValidateBusAvailability(vehicleId, maintenanceDate);\n\n            // Should fail due to scheduled maintenance"
  },
  {
    "File": "EndToEndWorkflowTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\EndToEndWorkflowTests.cs",
    "LineNumber": 140,
    "Column": 6868,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var updatedBus = BusRepository.GetBusById(vehicleId);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "\n            // 7. Update Bus status (if needed)\n            var updatedBus = BusRepository.GetBusById(vehicleId);\n            Assert.NotNull(updatedBus);\n            Assert.Equal(\"Active\", updatedBus.Status);"
  },
  {
    "File": "EndToEndWorkflowTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\EndToEndWorkflowTests.cs",
    "LineNumber": 165,
    "Column": 7790,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var vehicleId = BusRepository.AddBus(bus);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            // 2. Create test bus\n            var Bus = CreateTestVehicle(\"_PerformanceWorkflow\");\n            var vehicleId = BusRepository.AddBus(bus);\n            TestVehicleIds.Add(vehicleId);\n            _output.WriteLine($\"✅ Created Bus with ID: {vehicleId}\");"
  },
  {
    "File": "EndToEndWorkflowTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\EndToEndWorkflowTests.cs",
    "LineNumber": 166,
    "Column": 7860,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "TestVehicleIds.Add(vehicleId);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            var Bus = CreateTestVehicle(\"_PerformanceWorkflow\");\n            var vehicleId = BusRepository.AddBus(bus);\n            TestVehicleIds.Add(vehicleId);\n            _output.WriteLine($\"✅ Created Bus with ID: {vehicleId}\");\n"
  },
  {
    "File": "EndToEndWorkflowTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\EndToEndWorkflowTests.cs",
    "LineNumber": 167,
    "Column": 7928,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "_output.WriteLine($\"✅ Created Bus with ID: {vehicleId}\");",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            var vehicleId = BusRepository.AddBus(bus);\n            TestVehicleIds.Add(vehicleId);\n            _output.WriteLine($\"✅ Created Bus with ID: {vehicleId}\");\n\n            // 3. Create multiple routes for performance analysis"
  },
  {
    "File": "EndToEndWorkflowTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\EndToEndWorkflowTests.cs",
    "LineNumber": 172,
    "Column": 8107,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var route = CreateTestRoute(vehicleId, driverId, $\"_Performance_{i}\");",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            for (int i = 0; i < 3; i++)\n            {\n                var route = CreateTestRoute(vehicleId, driverId, $\"_Performance_{i}\");\n                route.Date = DateTime.Today.AddDays(-i).ToString(\"yyyy-MM-dd\");\n                route.AMBeginMiles = 1000 + (i * 50);"
  },
  {
    "File": "EndToEndWorkflowTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\EndToEndWorkflowTests.cs",
    "LineNumber": 231,
    "Column": 10607,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var vehicleId = BusRepository.AddBus(bus);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            var driver = CreateTestDriver(\"_IntegrityTest\");\n\n            var vehicleId = BusRepository.AddBus(bus);\n            var driverId = DriverRepository.AddDriver(driver);\n"
  },
  {
    "File": "EndToEndWorkflowTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\EndToEndWorkflowTests.cs",
    "LineNumber": 234,
    "Column": 10741,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "TestVehicleIds.Add(vehicleId);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            var driverId = DriverRepository.AddDriver(driver);\n\n            TestVehicleIds.Add(vehicleId);\n            TestDriverIds.Add(driverId);\n"
  },
  {
    "File": "EndToEndWorkflowTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\EndToEndWorkflowTests.cs",
    "LineNumber": 237,
    "Column": 10857,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "_output.WriteLine($\"✅ Created baseline data: Bus {vehicleId}, Driver {driverId}\");",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            TestDriverIds.Add(driverId);\n\n            _output.WriteLine($\"✅ Created baseline data: Bus {vehicleId}, Driver {driverId}\");\n\n            // 2. Perform multiple operations"
  },
  {
    "File": "EndToEndWorkflowTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\EndToEndWorkflowTests.cs",
    "LineNumber": 240,
    "Column": 10978,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var route1 = CreateTestRoute(vehicleId, driverId, \"_Integrity1\");",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "\n            // 2. Perform multiple operations\n            var route1 = CreateTestRoute(vehicleId, driverId, \"_Integrity1\");\n            var route2 = CreateTestRoute(vehicleId, driverId, \"_Integrity2\");\n            route2.Date = DateTime.Today.AddDays(1).ToString(\"yyyy-MM-dd\");"
  },
  {
    "File": "EndToEndWorkflowTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\EndToEndWorkflowTests.cs",
    "LineNumber": 241,
    "Column": 11056,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var route2 = CreateTestRoute(vehicleId, driverId, \"_Integrity2\");",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            // 2. Perform multiple operations\n            var route1 = CreateTestRoute(vehicleId, driverId, \"_Integrity1\");\n            var route2 = CreateTestRoute(vehicleId, driverId, \"_Integrity2\");\n            route2.Date = DateTime.Today.AddDays(1).ToString(\"yyyy-MM-dd\");\n"
  },
  {
    "File": "EndToEndWorkflowTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\EndToEndWorkflowTests.cs",
    "LineNumber": 258,
    "Column": 11764,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "Assert.Equal(vehicleId, retrievedRoute1.AMVehicleID);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            Assert.NotNull(retrievedRoute1);\n            Assert.NotNull(retrievedRoute2);\n            Assert.Equal(vehicleId, retrievedRoute1.AMVehicleID);\n            Assert.Equal(vehicleId, retrievedRoute2.AMVehicleID);\n            Assert.Equal(driverId, retrievedRoute1.AMDriverID);"
  },
  {
    "File": "EndToEndWorkflowTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\EndToEndWorkflowTests.cs",
    "LineNumber": 259,
    "Column": 11830,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "Assert.Equal(vehicleId, retrievedRoute2.AMVehicleID);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            Assert.NotNull(retrievedRoute2);\n            Assert.Equal(vehicleId, retrievedRoute1.AMVehicleID);\n            Assert.Equal(vehicleId, retrievedRoute2.AMVehicleID);\n            Assert.Equal(driverId, retrievedRoute1.AMDriverID);\n            Assert.Equal(driverId, retrievedRoute2.AMDriverID);"
  },
  {
    "File": "EndToEndWorkflowTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\EndToEndWorkflowTests.cs",
    "LineNumber": 280,
    "Column": 12945,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var availabilityCheck = ValidationService.ValidateBusAvailability(vehicleId, DateTime.Today);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "\n            // Bus should now be unavailable for new assignments\n            var availabilityCheck = ValidationService.ValidateBusAvailability(vehicleId, DateTime.Today);\n            Assert.False(availabilityCheck.IsValid, \"Bus out of service should be unavailable\");\n"
  },
  {
    "File": "EndToEndWorkflowTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\EndToEndWorkflowTests.cs",
    "LineNumber": 30,
    "Column": 853,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "CreateTestVehicle",
    "MatchedText": "CreateTestVehicle",
    "LineContent": "var Bus = CreateTestVehicle(\"_RouteWorkflow\");",
    "SuggestedFix": "Method name - should be CreateTestBus",
    "Context": "\n            // 1. Create new bus\n            var Bus = CreateTestVehicle(\"_RouteWorkflow\");\n            var vehicleId = BusRepository.AddBus(bus);\n            TestVehicleIds.Add(vehicleId);"
  },
  {
    "File": "EndToEndWorkflowTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\EndToEndWorkflowTests.cs",
    "LineNumber": 92,
    "Column": 4015,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "CreateTestVehicle",
    "MatchedText": "CreateTestVehicle",
    "LineContent": "var Bus = CreateTestVehicle(\"_MaintenanceWorkflow\");",
    "SuggestedFix": "Method name - should be CreateTestBus",
    "Context": "\n            // 1. Create test bus\n            var Bus = CreateTestVehicle(\"_MaintenanceWorkflow\");\n            var vehicleId = BusRepository.AddBus(bus);\n            TestVehicleIds.Add(vehicleId);"
  },
  {
    "File": "EndToEndWorkflowTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\EndToEndWorkflowTests.cs",
    "LineNumber": 164,
    "Column": 7731,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "CreateTestVehicle",
    "MatchedText": "CreateTestVehicle",
    "LineContent": "var Bus = CreateTestVehicle(\"_PerformanceWorkflow\");",
    "SuggestedFix": "Method name - should be CreateTestBus",
    "Context": "\n            // 2. Create test bus\n            var Bus = CreateTestVehicle(\"_PerformanceWorkflow\");\n            var vehicleId = BusRepository.AddBus(bus);\n            TestVehicleIds.Add(vehicleId);"
  },
  {
    "File": "EndToEndWorkflowTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\EndToEndWorkflowTests.cs",
    "LineNumber": 228,
    "Column": 10492,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "CreateTestVehicle",
    "MatchedText": "CreateTestVehicle",
    "LineContent": "var Bus = CreateTestVehicle(\"_IntegrityTest\");",
    "SuggestedFix": "Method name - should be CreateTestBus",
    "Context": "\n            // 1. Create baseline data\n            var Bus = CreateTestVehicle(\"_IntegrityTest\");\n            var driver = CreateTestDriver(\"_IntegrityTest\");\n"
  },
  {
    "File": "ErrorRecoveryTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ErrorRecoveryTests.cs",
    "LineNumber": 32,
    "Column": 959,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var vehicleId = BusRepository.AddBus(bus);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            // Test basic connectivity first\n            var Bus = CreateTestVehicle(\"_ConnectivityTest\");\n            var vehicleId = BusRepository.AddBus(bus);\n            TestVehicleIds.Add(vehicleId);\n"
  },
  {
    "File": "ErrorRecoveryTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ErrorRecoveryTests.cs",
    "LineNumber": 33,
    "Column": 1029,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "TestVehicleIds.Add(vehicleId);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            var Bus = CreateTestVehicle(\"_ConnectivityTest\");\n            var vehicleId = BusRepository.AddBus(bus);\n            TestVehicleIds.Add(vehicleId);\n\n            Assert.True(vehicleId > 0, \"Basic database connection should work\");"
  },
  {
    "File": "ErrorRecoveryTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ErrorRecoveryTests.cs",
    "LineNumber": 35,
    "Column": 1066,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "Assert.True(vehicleId > 0, \"Basic database connection should work\");",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            TestVehicleIds.Add(vehicleId);\n\n            Assert.True(vehicleId > 0, \"Basic database connection should work\");\n            _output.WriteLine(\"✅ Basic database connectivity confirmed\");\n"
  },
  {
    "File": "ErrorRecoveryTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ErrorRecoveryTests.cs",
    "LineNumber": 39,
    "Column": 1308,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var retrievedBus = BusRepository.GetBusById(vehicleId);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "\n            // Test retrieval after connection stress\n            var retrievedBus = BusRepository.GetBusById(vehicleId);\n            Assert.NotNull(retrievedBus);\n            Assert.Equal(bus.VehicleNumber, retrievedBus.VehicleNumber);"
  },
  {
    "File": "ErrorRecoveryTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ErrorRecoveryTests.cs",
    "LineNumber": 196,
    "Column": 7667,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var vehicleId = BusRepository.AddBus(bus);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            var driver = CreateTestDriver(\"_ConsistencyTest\");\n\n            var vehicleId = BusRepository.AddBus(bus);\n            var driverId = DriverRepository.AddDriver(driver);\n"
  },
  {
    "File": "ErrorRecoveryTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ErrorRecoveryTests.cs",
    "LineNumber": 199,
    "Column": 7801,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "TestVehicleIds.Add(vehicleId);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            var driverId = DriverRepository.AddDriver(driver);\n\n            TestVehicleIds.Add(vehicleId);\n            TestDriverIds.Add(driverId);\n"
  },
  {
    "File": "ErrorRecoveryTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ErrorRecoveryTests.cs",
    "LineNumber": 203,
    "Column": 7948,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var route1 = CreateTestRoute(vehicleId, driverId, \"_Concurrent1\");",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "\n            // Simulate concurrent route operations\n            var route1 = CreateTestRoute(vehicleId, driverId, \"_Concurrent1\");\n            var route2 = CreateTestRoute(vehicleId, driverId, \"_Concurrent2\");\n            route2.Date = DateTime.Today.AddDays(1).ToString(\"yyyy-MM-dd\"); // Different date"
  },
  {
    "File": "ErrorRecoveryTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ErrorRecoveryTests.cs",
    "LineNumber": 204,
    "Column": 8027,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var route2 = CreateTestRoute(vehicleId, driverId, \"_Concurrent2\");",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            // Simulate concurrent route operations\n            var route1 = CreateTestRoute(vehicleId, driverId, \"_Concurrent1\");\n            var route2 = CreateTestRoute(vehicleId, driverId, \"_Concurrent2\");\n            route2.Date = DateTime.Today.AddDays(1).ToString(\"yyyy-MM-dd\"); // Different date\n"
  },
  {
    "File": "ErrorRecoveryTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ErrorRecoveryTests.cs",
    "LineNumber": 219,
    "Column": 8696,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "Assert.Equal(vehicleId, retrievedRoute1.AMVehicleID);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            Assert.NotNull(retrievedRoute1);\n            Assert.NotNull(retrievedRoute2);\n            Assert.Equal(vehicleId, retrievedRoute1.AMVehicleID);\n            Assert.Equal(vehicleId, retrievedRoute2.AMVehicleID);\n            Assert.Equal(driverId, retrievedRoute1.AMDriverID);"
  },
  {
    "File": "ErrorRecoveryTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ErrorRecoveryTests.cs",
    "LineNumber": 220,
    "Column": 8762,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "Assert.Equal(vehicleId, retrievedRoute2.AMVehicleID);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            Assert.NotNull(retrievedRoute2);\n            Assert.Equal(vehicleId, retrievedRoute1.AMVehicleID);\n            Assert.Equal(vehicleId, retrievedRoute2.AMVehicleID);\n            Assert.Equal(driverId, retrievedRoute1.AMDriverID);\n            Assert.Equal(driverId, retrievedRoute2.AMDriverID);"
  },
  {
    "File": "ErrorRecoveryTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ErrorRecoveryTests.cs",
    "LineNumber": 232,
    "Column": 9324,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var updatedBus = BusRepository.GetBusById(vehicleId);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "\n            // Verify routes still reference the updated bus\n            var updatedBus = BusRepository.GetBusById(vehicleId);\n            Assert.NotNull(updatedBus);\n            Assert.Equal(\"Maintenance\", updatedBus.Status);"
  },
  {
    "File": "ErrorRecoveryTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ErrorRecoveryTests.cs",
    "LineNumber": 249,
    "Column": 9936,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var vehicleId = BusRepository.AddBus(bus);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            var driver = CreateTestDriver(\"_OrphanTest\");\n\n            var vehicleId = BusRepository.AddBus(bus);\n            var driverId = DriverRepository.AddDriver(driver);\n"
  },
  {
    "File": "ErrorRecoveryTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ErrorRecoveryTests.cs",
    "LineNumber": 252,
    "Column": 10070,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "TestVehicleIds.Add(vehicleId);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            var driverId = DriverRepository.AddDriver(driver);\n\n            TestVehicleIds.Add(vehicleId);\n            TestDriverIds.Add(driverId);\n"
  },
  {
    "File": "ErrorRecoveryTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ErrorRecoveryTests.cs",
    "LineNumber": 256,
    "Column": 10223,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var route = CreateTestRoute(vehicleId, driverId, \"_OrphanTest\");",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "\n            // Create route that depends on Bus and driver\n            var route = CreateTestRoute(vehicleId, driverId, \"_OrphanTest\");\n            var routeId = RouteRepository.AddRoute(route);\n            TestRouteIds.Add(routeId);"
  },
  {
    "File": "ErrorRecoveryTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ErrorRecoveryTests.cs",
    "LineNumber": 263,
    "Column": 10545,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "Assert.Equal(vehicleId, retrievedRoute.AMVehicleID);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            var retrievedRoute = RouteRepository.GetRouteById(routeId);\n            Assert.NotNull(retrievedRoute);\n            Assert.Equal(vehicleId, retrievedRoute.AMVehicleID);\n            Assert.Equal(driverId, retrievedRoute.AMDriverID);\n"
  },
  {
    "File": "ErrorRecoveryTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ErrorRecoveryTests.cs",
    "LineNumber": 267,
    "Column": 10767,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var deleteResult = BusRepository.DeleteBus(vehicleId);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "\n            // Attempt to delete Bus that has dependent routes\n            var deleteResult = BusRepository.DeleteBus(vehicleId);\n\n            if (deleteResult)"
  },
  {
    "File": "ErrorRecoveryTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ErrorRecoveryTests.cs",
    "LineNumber": 273,
    "Column": 11079,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "TestVehicleIds.Remove(vehicleId);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "                _output.WriteLine(\"⚠️ Bus deletion succeeded despite dependent route (cascade delete or weak reference)\");\n                // If deletion succeeded, remove from our tracking since it's already deleted\n                TestVehicleIds.Remove(vehicleId);\n            }\n            else"
  },
  {
    "File": "ErrorRecoveryTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ErrorRecoveryTests.cs",
    "LineNumber": 319,
    "Column": 12749,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var vehicleId = BusRepository.AddBus(bus);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            // Test validation with extreme dates\n            var Bus = CreateTestVehicle(\"_ExceptionTest\");\n            var vehicleId = BusRepository.AddBus(bus);\n            TestVehicleIds.Add(vehicleId);\n"
  },
  {
    "File": "ErrorRecoveryTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ErrorRecoveryTests.cs",
    "LineNumber": 320,
    "Column": 12819,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "TestVehicleIds.Add(vehicleId);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            var Bus = CreateTestVehicle(\"_ExceptionTest\");\n            var vehicleId = BusRepository.AddBus(bus);\n            TestVehicleIds.Add(vehicleId);\n\n            try"
  },
  {
    "File": "ErrorRecoveryTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ErrorRecoveryTests.cs",
    "LineNumber": 324,
    "Column": 12933,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var result = ValidationService.ValidateBusAvailability(vehicleId, DateTime.MinValue);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            try\n            {\n                var result = ValidationService.ValidateBusAvailability(vehicleId, DateTime.MinValue);\n                _output.WriteLine($\"✅ Min date validation: {(result.IsValid ? \"valid\" : \"invalid\")}\");\n            }"
  },
  {
    "File": "ErrorRecoveryTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ErrorRecoveryTests.cs",
    "LineNumber": 334,
    "Column": 13333,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var result = ValidationService.ValidateBusAvailability(vehicleId, DateTime.MaxValue);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            try\n            {\n                var result = ValidationService.ValidateBusAvailability(vehicleId, DateTime.MaxValue);\n                _output.WriteLine($\"✅ Max date validation: {(result.IsValid ? \"valid\" : \"invalid\")}\");\n            }"
  },
  {
    "File": "ErrorRecoveryTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ErrorRecoveryTests.cs",
    "LineNumber": 31,
    "Column": 903,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "CreateTestVehicle",
    "MatchedText": "CreateTestVehicle",
    "LineContent": "var Bus = CreateTestVehicle(\"_ConnectivityTest\");",
    "SuggestedFix": "Method name - should be CreateTestBus",
    "Context": "\n            // Test basic connectivity first\n            var Bus = CreateTestVehicle(\"_ConnectivityTest\");\n            var vehicleId = BusRepository.AddBus(bus);\n            TestVehicleIds.Add(vehicleId);"
  },
  {
    "File": "ErrorRecoveryTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ErrorRecoveryTests.cs",
    "LineNumber": 193,
    "Column": 7548,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "CreateTestVehicle",
    "MatchedText": "CreateTestVehicle",
    "LineContent": "var Bus = CreateTestVehicle(\"_ConsistencyTest\");",
    "SuggestedFix": "Method name - should be CreateTestBus",
    "Context": "\n            // Create test Bus and driver\n            var Bus = CreateTestVehicle(\"_ConsistencyTest\");\n            var driver = CreateTestDriver(\"_ConsistencyTest\");\n"
  },
  {
    "File": "ErrorRecoveryTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ErrorRecoveryTests.cs",
    "LineNumber": 246,
    "Column": 9827,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "CreateTestVehicle",
    "MatchedText": "CreateTestVehicle",
    "LineContent": "var Bus = CreateTestVehicle(\"_OrphanTest\");",
    "SuggestedFix": "Method name - should be CreateTestBus",
    "Context": "\n            // Create test data with dependencies\n            var Bus = CreateTestVehicle(\"_OrphanTest\");\n            var driver = CreateTestDriver(\"_OrphanTest\");\n"
  },
  {
    "File": "ErrorRecoveryTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ErrorRecoveryTests.cs",
    "LineNumber": 318,
    "Column": 12696,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "CreateTestVehicle",
    "MatchedText": "CreateTestVehicle",
    "LineContent": "var Bus = CreateTestVehicle(\"_ExceptionTest\");",
    "SuggestedFix": "Method name - should be CreateTestBus",
    "Context": "\n            // Test validation with extreme dates\n            var Bus = CreateTestVehicle(\"_ExceptionTest\");\n            var vehicleId = BusRepository.AddBus(bus);\n            TestVehicleIds.Add(vehicleId);"
  },
  {
    "File": "LoadStressTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\LoadStressTests.cs",
    "LineNumber": 55,
    "Column": 1820,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var vehicleId = BusRepository.AddBus(bus);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "                            // Create bus\n                            var Bus = CreateTestVehicle($\"_User{currentUserId}_Op{op}\");\n                            var vehicleId = BusRepository.AddBus(bus);\n\n                            lock (TestVehicleIds)"
  },
  {
    "File": "LoadStressTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\LoadStressTests.cs",
    "LineNumber": 59,
    "Column": 1991,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "TestVehicleIds.Add(vehicleId);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "                            lock (TestVehicleIds)\n                            {\n                                TestVehicleIds.Add(vehicleId);\n                            }\n"
  },
  {
    "File": "LoadStressTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\LoadStressTests.cs",
    "LineNumber": 63,
    "Column": 2146,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var retrievedBus = BusRepository.GetBusById(vehicleId);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "\n                            // Read bus\n                            var retrievedBus = BusRepository.GetBusById(vehicleId);\n                            Assert.NotNull(retrievedBus);\n"
  },
  {
    "File": "LoadStressTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\LoadStressTests.cs",
    "LineNumber": 312,
    "Column": 12865,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var vehicleId = BusRepository.AddBus(bus);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "                        // Perform database operation\n                        var Bus = CreateTestVehicle($\"_Contention_{operationId}\");\n                        var vehicleId = BusRepository.AddBus(bus);\n\n                        if (vehicleId > 0)"
  },
  {
    "File": "LoadStressTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\LoadStressTests.cs",
    "LineNumber": 314,
    "Column": 12933,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "if (vehicleId > 0)",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "                        var vehicleId = BusRepository.AddBus(bus);\n\n                        if (vehicleId > 0)\n                        {\n                            lock (TestVehicleIds)"
  },
  {
    "File": "LoadStressTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\LoadStressTests.cs",
    "LineNumber": 318,
    "Column": 13105,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "TestVehicleIds.Add(vehicleId);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "                            lock (TestVehicleIds)\n                            {\n                                TestVehicleIds.Add(vehicleId);\n                            }\n"
  },
  {
    "File": "LoadStressTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\LoadStressTests.cs",
    "LineNumber": 322,
    "Column": 13272,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var retrievedBus = BusRepository.GetBusById(vehicleId);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "\n                            // Verify the operation\n                            var retrievedBus = BusRepository.GetBusById(vehicleId);\n                            var success = retrievedBus != null;\n"
  },
  {
    "File": "LoadStressTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\LoadStressTests.cs",
    "LineNumber": 406,
    "Column": 16836,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var vehicleIds = new List<int>();",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "\n                // Add to database (simulating real usage)\n                var vehicleIds = new List<int>();\n                foreach (var Bus in vehicles)\n                {"
  },
  {
    "File": "LoadStressTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\LoadStressTests.cs",
    "LineNumber": 410,
    "Column": 17006,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "vehicleIds.Add(id);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "                {\n                    var id = BusRepository.AddBus(bus);\n                    vehicleIds.Add(id);\n                }\n"
  },
  {
    "File": "LoadStressTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\LoadStressTests.cs",
    "LineNumber": 415,
    "Column": 17145,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "TestVehicleIds.AddRange(vehicleIds);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "                lock (TestVehicleIds)\n                {\n                    TestVehicleIds.AddRange(vehicleIds);\n                }\n"
  },
  {
    "File": "LoadStressTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\LoadStressTests.cs",
    "LineNumber": 484,
    "Column": 20055,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var vehicleId = BusRepository.AddBus(bus);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "                        var driver = CreateTestDriver($\"_Large_{i:D4}\");\n\n                        var vehicleId = BusRepository.AddBus(bus);\n                        var driverId = DriverRepository.AddDriver(driver);\n"
  },
  {
    "File": "LoadStressTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\LoadStressTests.cs",
    "LineNumber": 487,
    "Column": 20214,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "batchVehicleIds.Add(vehicleId);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "                        var driverId = DriverRepository.AddDriver(driver);\n\n                        batchVehicleIds.Add(vehicleId);\n                        batchDriverIds.Add(driverId);\n"
  },
  {
    "File": "LoadStressTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\LoadStressTests.cs",
    "LineNumber": 493,
    "Column": 20548,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var route = CreateTestRoute(vehicleId, driverId, $\"_D{day}\");",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "                        for (int day = 0; day < Math.Min(daysOfData, 30); day++) // Limit to 30 days per Bus to avoid excessive data\n                        {\n                            var route = CreateTestRoute(vehicleId, driverId, $\"_D{day}\");\n                            route.Date = DateTime.Today.AddDays(-day).ToString(\"yyyy-MM-dd\");\n"
  },
  {
    "File": "LoadStressTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\LoadStressTests.cs",
    "LineNumber": 54,
    "Column": 1737,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "CreateTestVehicle",
    "MatchedText": "CreateTestVehicle",
    "LineContent": "var Bus = CreateTestVehicle($\"_User{currentUserId}_Op{op}\");",
    "SuggestedFix": "Method name - should be CreateTestBus",
    "Context": "                        {\n                            // Create bus\n                            var Bus = CreateTestVehicle($\"_User{currentUserId}_Op{op}\");\n                            var vehicleId = BusRepository.AddBus(bus);\n"
  },
  {
    "File": "LoadStressTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\LoadStressTests.cs",
    "LineNumber": 195,
    "Column": 7628,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "CreateTestVehicle",
    "MatchedText": "CreateTestVehicle",
    "LineContent": "var Bus = CreateTestVehicle($\"_Large_{vehicleIndex:D4}\");",
    "SuggestedFix": "Method name - should be CreateTestBus",
    "Context": "                creationTasks.Add(Task.Run(() =>\n                {\n                    var Bus = CreateTestVehicle($\"_Large_{vehicleIndex:D4}\");\n                    return BusRepository.AddBus(bus);\n                }));"
  },
  {
    "File": "LoadStressTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\LoadStressTests.cs",
    "LineNumber": 311,
    "Column": 12788,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "CreateTestVehicle",
    "MatchedText": "CreateTestVehicle",
    "LineContent": "var Bus = CreateTestVehicle($\"_Contention_{operationId}\");",
    "SuggestedFix": "Method name - should be CreateTestBus",
    "Context": "                    {\n                        // Perform database operation\n                        var Bus = CreateTestVehicle($\"_Contention_{operationId}\");\n                        var vehicleId = BusRepository.AddBus(bus);\n"
  },
  {
    "File": "LoadStressTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\LoadStressTests.cs",
    "LineNumber": 402,
    "Column": 16698,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "CreateTestVehicle",
    "MatchedText": "CreateTestVehicle",
    "LineContent": "vehicles.Add(CreateTestVehicle($\"_Memory_{i}_{j}\"));",
    "SuggestedFix": "Method name - should be CreateTestBus",
    "Context": "                for (int j = 0; j < 100; j++)\n                {\n                    vehicles.Add(CreateTestVehicle($\"_Memory_{i}_{j}\"));\n                }\n"
  },
  {
    "File": "LoadStressTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\LoadStressTests.cs",
    "LineNumber": 481,
    "Column": 19916,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "CreateTestVehicle",
    "MatchedText": "CreateTestVehicle",
    "LineContent": "var Bus = CreateTestVehicle($\"_Large_{i:D4}\");",
    "SuggestedFix": "Method name - should be CreateTestBus",
    "Context": "                    for (int i = batch; i < batchEnd; i++)\n                    {\n                        var Bus = CreateTestVehicle($\"_Large_{i:D4}\");\n                        var driver = CreateTestDriver($\"_Large_{i:D4}\");\n"
  },
  {
    "File": "PerformanceTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\PerformanceTests.cs",
    "LineNumber": 122,
    "Column": 4864,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var vehicleId = BusRepository.AddBus(bus);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "                {\n                    var Bus = CreateTestVehicle($\"_Bulk_{i}\");\n                    var vehicleId = BusRepository.AddBus(bus);\n                    TestVehicleIds.Add(vehicleId);\n                }"
  },
  {
    "File": "PerformanceTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\PerformanceTests.cs",
    "LineNumber": 123,
    "Column": 4942,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "TestVehicleIds.Add(vehicleId);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "                    var Bus = CreateTestVehicle($\"_Bulk_{i}\");\n                    var vehicleId = BusRepository.AddBus(bus);\n                    TestVehicleIds.Add(vehicleId);\n                }\n"
  },
  {
    "File": "PerformanceTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\PerformanceTests.cs",
    "LineNumber": 148,
    "Column": 5943,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var vehicleId = BusRepository.AddBus(bus);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            var driver = CreateTestDriver(\"_ValidationPerf\");\n\n            var vehicleId = BusRepository.AddBus(bus);\n            var driverId = DriverRepository.AddDriver(driver);\n"
  },
  {
    "File": "PerformanceTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\PerformanceTests.cs",
    "LineNumber": 151,
    "Column": 6077,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "TestVehicleIds.Add(vehicleId);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            var driverId = DriverRepository.AddDriver(driver);\n\n            TestVehicleIds.Add(vehicleId);\n            TestDriverIds.Add(driverId);\n"
  },
  {
    "File": "PerformanceTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\PerformanceTests.cs",
    "LineNumber": 160,
    "Column": 6427,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "ValidationService.ValidateBusAvailability(vehicleId, DateTime.Today.AddDays(i % 30));",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "                for (int i = 0; i < 100; i++)\n                {\n                    ValidationService.ValidateBusAvailability(vehicleId, DateTime.Today.AddDays(i % 30));\n                    ValidationService.ValidateDriverAvailability(driverId, DateTime.Today.AddDays(i % 30));\n"
  },
  {
    "File": "PerformanceTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\PerformanceTests.cs",
    "LineNumber": 167,
    "Column": 6759,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "VehicleFueledID = vehicleId,",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "                        var testFuel = new Fuel\n                        {\n                            VehicleFueledID = vehicleId,\n                            FuelDate = DateTime.Today.AddDays(-i).ToString(\"yyyy-MM-dd\"),\n                            FuelLocation = \"Test Station\","
  },
  {
    "File": "PerformanceTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\PerformanceTests.cs",
    "LineNumber": 205,
    "Column": 8186,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var vehicleId = BusRepository.AddBus(bus);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "                {\n                    var Bus = CreateTestVehicle($\"_MemTest_{i}\");\n                    var vehicleId = BusRepository.AddBus(bus);\n                    tempVehicleIds.Add(vehicleId);\n                }"
  },
  {
    "File": "PerformanceTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\PerformanceTests.cs",
    "LineNumber": 206,
    "Column": 8264,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "tempVehicleIds.Add(vehicleId);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "                    var Bus = CreateTestVehicle($\"_MemTest_{i}\");\n                    var vehicleId = BusRepository.AddBus(bus);\n                    tempVehicleIds.Add(vehicleId);\n                }\n"
  },
  {
    "File": "PerformanceTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\PerformanceTests.cs",
    "LineNumber": 241,
    "Column": 9422,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var vehicleId = BusRepository.AddBus(bus);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "                var driver = CreateTestDriver($\"_PerfTest_{i}\");\n\n                var vehicleId = BusRepository.AddBus(bus);\n                var driverId = DriverRepository.AddDriver(driver);\n"
  },
  {
    "File": "PerformanceTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\PerformanceTests.cs",
    "LineNumber": 244,
    "Column": 9564,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "TestVehicleIds.Add(vehicleId);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "                var driverId = DriverRepository.AddDriver(driver);\n\n                TestVehicleIds.Add(vehicleId);\n                TestDriverIds.Add(driverId);\n"
  },
  {
    "File": "PerformanceTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\PerformanceTests.cs",
    "LineNumber": 293,
    "Column": 11416,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var vehicleIds = new List<int>();",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            var drivers = TestDataFactory.CreateDriverCohort(150, \"PERF\");\n\n            var vehicleIds = new List<int>();\n            var driverIds = new List<int>();\n"
  },
  {
    "File": "PerformanceTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\PerformanceTests.cs",
    "LineNumber": 299,
    "Column": 11617,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var vehicleId = BusRepository.AddBus(bus);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            foreach (var Bus in vehicles.Take(200))\n            {\n                var vehicleId = BusRepository.AddBus(bus);\n                vehicleIds.Add(vehicleId);\n                TestVehicleIds.Add(vehicleId);"
  },
  {
    "File": "PerformanceTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\PerformanceTests.cs",
    "LineNumber": 300,
    "Column": 11672,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "vehicleIds.Add(vehicleId);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            {\n                var vehicleId = BusRepository.AddBus(bus);\n                vehicleIds.Add(vehicleId);\n                TestVehicleIds.Add(vehicleId);\n            }"
  },
  {
    "File": "PerformanceTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\PerformanceTests.cs",
    "LineNumber": 300,
    "Column": 11687,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "vehicleIds.Add(vehicleId);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            {\n                var vehicleId = BusRepository.AddBus(bus);\n                vehicleIds.Add(vehicleId);\n                TestVehicleIds.Add(vehicleId);\n            }"
  },
  {
    "File": "PerformanceTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\PerformanceTests.cs",
    "LineNumber": 301,
    "Column": 11734,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "TestVehicleIds.Add(vehicleId);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "                var vehicleId = BusRepository.AddBus(bus);\n                vehicleIds.Add(vehicleId);\n                TestVehicleIds.Add(vehicleId);\n            }\n"
  },
  {
    "File": "PerformanceTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\PerformanceTests.cs",
    "LineNumber": 314,
    "Column": 12158,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "vehicleIds.Take(50).ToList(),",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            // Create historical routes\n            var routeHistory = TestDataFactory.CreateRouteHistory(\n                vehicleIds.Take(50).ToList(),\n                driverIds.Take(50).ToList(),\n                DateTime.Today.AddDays(-30),"
  },
  {
    "File": "PerformanceTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\PerformanceTests.cs",
    "LineNumber": 325,
    "Column": 12563,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "_output.WriteLine($\"Created large dataset: {vehicleIds.Count} vehicles, {driverIds.Count} drivers, {TestRouteIds.Count} routes\");",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            }\n\n            _output.WriteLine($\"Created large dataset: {vehicleIds.Count} vehicles, {driverIds.Count} drivers, {TestRouteIds.Count} routes\");\n\n            var beforeMemory = PerformanceTestHelpers.GetMemoryUsage();"
  },
  {
    "File": "PerformanceTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\PerformanceTests.cs",
    "LineNumber": 409,
    "Column": 16595,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var vehicleIds = new List<int>();",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            var drivers = TestDataFactory.CreateDriverCohort(vehicleCount, \"ANALYTICS\");\n\n            var vehicleIds = new List<int>();\n            var driverIds = new List<int>();\n"
  },
  {
    "File": "PerformanceTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\PerformanceTests.cs",
    "LineNumber": 415,
    "Column": 16832,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var vehicleId = BusRepository.AddBus(vehicles[i]);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            for (int i = 0; i < Math.Min(vehicles.Count, drivers.Count); i++)\n            {\n                var vehicleId = BusRepository.AddBus(vehicles[i]);\n                var driverId = DriverRepository.AddDriver(drivers[i]);\n"
  },
  {
    "File": "PerformanceTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\PerformanceTests.cs",
    "LineNumber": 418,
    "Column": 16967,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "vehicleIds.Add(vehicleId);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "                var driverId = DriverRepository.AddDriver(drivers[i]);\n\n                vehicleIds.Add(vehicleId);\n                driverIds.Add(driverId);\n"
  },
  {
    "File": "PerformanceTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\PerformanceTests.cs",
    "LineNumber": 418,
    "Column": 16982,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "vehicleIds.Add(vehicleId);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "                var driverId = DriverRepository.AddDriver(drivers[i]);\n\n                vehicleIds.Add(vehicleId);\n                driverIds.Add(driverId);\n"
  },
  {
    "File": "PerformanceTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\PerformanceTests.cs",
    "LineNumber": 421,
    "Column": 17071,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "TestVehicleIds.Add(vehicleId);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "                driverIds.Add(driverId);\n\n                TestVehicleIds.Add(vehicleId);\n                TestDriverIds.Add(driverId);\n            }"
  },
  {
    "File": "PerformanceTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\PerformanceTests.cs",
    "LineNumber": 427,
    "Column": 17274,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "vehicleIds, driverIds,",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            // Create historical routes for analytics\n            var routes = TestDataFactory.CreateRouteHistory(\n                vehicleIds, driverIds,\n                DateTime.Today.AddDays(-daysOfData),\n                DateTime.Today.AddDays(-1));"
  },
  {
    "File": "PerformanceTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\PerformanceTests.cs",
    "LineNumber": 438,
    "Column": 17652,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "foreach (var vehicleId in vehicleIds.Take(20)) // Limit fuel records for performance",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "\n            // Create fuel history for cost analytics\n            foreach (var vehicleId in vehicleIds.Take(20)) // Limit fuel records for performance\n            {\n                var fuelRecords = TestDataFactory.CreateFuelHistory(vehicleId, daysOfData / 30);"
  },
  {
    "File": "PerformanceTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\PerformanceTests.cs",
    "LineNumber": 438,
    "Column": 17665,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "foreach (var vehicleId in vehicleIds.Take(20)) // Limit fuel records for performance",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "\n            // Create fuel history for cost analytics\n            foreach (var vehicleId in vehicleIds.Take(20)) // Limit fuel records for performance\n            {\n                var fuelRecords = TestDataFactory.CreateFuelHistory(vehicleId, daysOfData / 30);"
  },
  {
    "File": "PerformanceTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\PerformanceTests.cs",
    "LineNumber": 440,
    "Column": 17806,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var fuelRecords = TestDataFactory.CreateFuelHistory(vehicleId, daysOfData / 30);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            foreach (var vehicleId in vehicleIds.Take(20)) // Limit fuel records for performance\n            {\n                var fuelRecords = TestDataFactory.CreateFuelHistory(vehicleId, daysOfData / 30);\n                foreach (var fuel in fuelRecords)\n                {"
  },
  {
    "File": "PerformanceTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\PerformanceTests.cs",
    "LineNumber": 447,
    "Column": 18054,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "_output.WriteLine($\"✅ Created analytics dataset: {vehicleIds.Count} vehicles, {TestRouteIds.Count} routes\");",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            }\n\n            _output.WriteLine($\"✅ Created analytics dataset: {vehicleIds.Count} vehicles, {TestRouteIds.Count} routes\");\n        }\n"
  },
  {
    "File": "PerformanceTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\PerformanceTests.cs",
    "LineNumber": 121,
    "Column": 4807,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "CreateTestVehicle",
    "MatchedText": "CreateTestVehicle",
    "LineContent": "var Bus = CreateTestVehicle($\"_Bulk_{i}\");",
    "SuggestedFix": "Method name - should be CreateTestBus",
    "Context": "                for (int i = 0; i < 20; i++)\n                {\n                    var Bus = CreateTestVehicle($\"_Bulk_{i}\");\n                    var vehicleId = BusRepository.AddBus(bus);\n                    TestVehicleIds.Add(vehicleId);"
  },
  {
    "File": "PerformanceTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\PerformanceTests.cs",
    "LineNumber": 145,
    "Column": 5826,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "CreateTestVehicle",
    "MatchedText": "CreateTestVehicle",
    "LineContent": "var Bus = CreateTestVehicle(\"_ValidationPerf\");",
    "SuggestedFix": "Method name - should be CreateTestBus",
    "Context": "\n            // Create test data\n            var Bus = CreateTestVehicle(\"_ValidationPerf\");\n            var driver = CreateTestDriver(\"_ValidationPerf\");\n"
  },
  {
    "File": "PerformanceTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\PerformanceTests.cs",
    "LineNumber": 204,
    "Column": 8126,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "CreateTestVehicle",
    "MatchedText": "CreateTestVehicle",
    "LineContent": "var Bus = CreateTestVehicle($\"_MemTest_{i}\");",
    "SuggestedFix": "Method name - should be CreateTestBus",
    "Context": "                for (int i = 0; i < 30; i++)\n                {\n                    var Bus = CreateTestVehicle($\"_MemTest_{i}\");\n                    var vehicleId = BusRepository.AddBus(bus);\n                    tempVehicleIds.Add(vehicleId);"
  },
  {
    "File": "PerformanceTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\PerformanceTests.cs",
    "LineNumber": 238,
    "Column": 9299,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "CreateTestVehicle",
    "MatchedText": "CreateTestVehicle",
    "LineContent": "var Bus = CreateTestVehicle($\"_PerfTest_{i}\");",
    "SuggestedFix": "Method name - should be CreateTestBus",
    "Context": "            for (int i = 0; i < vehicleCount; i++)\n            {\n                var Bus = CreateTestVehicle($\"_PerfTest_{i}\");\n                var driver = CreateTestDriver($\"_PerfTest_{i}\");\n"
  },
  {
    "File": "RouteAnalyticsServiceTest.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\RouteAnalyticsServiceTest.cs",
    "LineNumber": 302,
    "Column": 9904,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var vehicleId = vehicleRepo.AddBus(testBus);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "                Status = \"Active\"\n            };\n            var vehicleId = vehicleRepo.AddBus(testBus);\n\n            var testDriver = new Driver"
  },
  {
    "File": "RouteAnalyticsServiceTest.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\RouteAnalyticsServiceTest.cs",
    "LineNumber": 315,
    "Column": 10375,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var testRoute = CreateTestRoute(vehicleId, driverId);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            var driverId = driverRepo.AddDriver(testDriver);\n\n            var testRoute = CreateTestRoute(vehicleId, driverId);\n            var routeId = _routeRepository.AddRoute(testRoute);\n            _testRouteIds.Add(routeId);"
  },
  {
    "File": "RouteAnalyticsServiceTest.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\RouteAnalyticsServiceTest.cs",
    "LineNumber": 378,
    "Column": 12347,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "private Route CreateTestRoute(int vehicleId = 0, int driverId = 0)",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "        #region Helper Methods\n\n        private Route CreateTestRoute(int vehicleId = 0, int driverId = 0)\n        {\n            var timestamp = DateTime.Now.Ticks;"
  },
  {
    "File": "RouteAnalyticsServiceTest.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\RouteAnalyticsServiceTest.cs",
    "LineNumber": 389,
    "Column": 12785,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "AMVehicleID = vehicleId > 0 ? vehicleId : 1,",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "                AMEndMiles = 125,\n                AMRiders = 30,\n                AMVehicleID = vehicleId > 0 ? vehicleId : 1,\n                AMDriverID = driverId > 0 ? driverId : 1,\n                PMBeginMiles = 125,"
  },
  {
    "File": "RouteAnalyticsServiceTest.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\RouteAnalyticsServiceTest.cs",
    "LineNumber": 389,
    "Column": 12801,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "AMVehicleID = vehicleId > 0 ? vehicleId : 1,",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "                AMEndMiles = 125,\n                AMRiders = 30,\n                AMVehicleID = vehicleId > 0 ? vehicleId : 1,\n                AMDriverID = driverId > 0 ? driverId : 1,\n                PMBeginMiles = 125,"
  },
  {
    "File": "RouteAnalyticsServiceTest.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\RouteAnalyticsServiceTest.cs",
    "LineNumber": 394,
    "Column": 13005,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "PMVehicleID = vehicleId > 0 ? vehicleId : 1,",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "                PMEndMiles = 150,\n                PMRiders = 25,\n                PMVehicleID = vehicleId > 0 ? vehicleId : 1,\n                PMDriverID = driverId > 0 ? driverId : 1\n            };"
  },
  {
    "File": "RouteAnalyticsServiceTest.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\RouteAnalyticsServiceTest.cs",
    "LineNumber": 394,
    "Column": 13021,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "PMVehicleID = vehicleId > 0 ? vehicleId : 1,",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "                PMEndMiles = 150,\n                PMRiders = 25,\n                PMVehicleID = vehicleId > 0 ? vehicleId : 1,\n                PMDriverID = driverId > 0 ? driverId : 1\n            };"
  },
  {
    "File": "SecurityTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\SecurityTests.cs",
    "LineNumber": 33,
    "Column": 990,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var vehicleId = BusRepository.AddBus(bus);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            // Create a legitimate test Bus first\n            var Bus = CreateTestVehicle(\"_SecurityTest\");\n            var vehicleId = BusRepository.AddBus(bus);\n            TestVehicleIds.Add(vehicleId);\n"
  },
  {
    "File": "SecurityTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\SecurityTests.cs",
    "LineNumber": 34,
    "Column": 1060,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "TestVehicleIds.Add(vehicleId);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            var Bus = CreateTestVehicle(\"_SecurityTest\");\n            var vehicleId = BusRepository.AddBus(bus);\n            TestVehicleIds.Add(vehicleId);\n\n            // Test common SQL injection patterns"
  },
  {
    "File": "SecurityTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\SecurityTests.cs",
    "LineNumber": 57,
    "Column": 1910,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var testBus = BusRepository.GetBusById(vehicleId);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "\n                    // Verify our test Bus still exists (no data corruption)\n                    var testBus = BusRepository.GetBusById(vehicleId);\n                    Assert.NotNull(testBus);\n                    Assert.Equal(\"Active\", testBus.Status);"
  },
  {
    "File": "SecurityTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\SecurityTests.cs",
    "LineNumber": 174,
    "Column": 6621,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var vehicleId = BusRepository.AddBus(bus);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            busVIN = \"CONFIDENTIAL123456789\";\n\n            var vehicleId = BusRepository.AddBus(bus);\n            TestVehicleIds.Add(vehicleId);\n"
  },
  {
    "File": "SecurityTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\SecurityTests.cs",
    "LineNumber": 175,
    "Column": 6691,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "TestVehicleIds.Add(vehicleId);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "\n            var vehicleId = BusRepository.AddBus(bus);\n            TestVehicleIds.Add(vehicleId);\n\n            // Test normal access works"
  },
  {
    "File": "SecurityTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\SecurityTests.cs",
    "LineNumber": 178,
    "Column": 6800,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var retrievedBus = BusRepository.GetBusById(vehicleId);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "\n            // Test normal access works\n            var retrievedBus = BusRepository.GetBusById(vehicleId);\n            Assert.NotNull(retrievedBus);\n            Assert.Equal(bus.VIN, retrievedBus.VIN);"
  },
  {
    "File": "SecurityTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\SecurityTests.cs",
    "LineNumber": 209,
    "Column": 7763,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var vehicleId = BusRepository.AddBus(bus);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            // Create initial bus\n            var Bus = CreateTestVehicle(\"_AuditTest\");\n            var vehicleId = BusRepository.AddBus(bus);\n            TestVehicleIds.Add(vehicleId);\n"
  },
  {
    "File": "SecurityTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\SecurityTests.cs",
    "LineNumber": 210,
    "Column": 7833,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "TestVehicleIds.Add(vehicleId);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            var Bus = CreateTestVehicle(\"_AuditTest\");\n            var vehicleId = BusRepository.AddBus(bus);\n            TestVehicleIds.Add(vehicleId);\n\n            var originalStatus = bus.Status;"
  },
  {
    "File": "SecurityTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\SecurityTests.cs",
    "LineNumber": 215,
    "Column": 7953,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "bus.VehicleID = vehicleId;",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "\n            // Update Bus status\n            bus.VehicleID = vehicleId;\n            bus.Status = \"Maintenance\";\n            BusRepository.UpdateBus(bus);"
  },
  {
    "File": "SecurityTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\SecurityTests.cs",
    "LineNumber": 220,
    "Column": 8142,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var updatedBus = BusRepository.GetBusById(vehicleId);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "\n            // Verify update was applied\n            var updatedBus = BusRepository.GetBusById(vehicleId);\n            Assert.NotNull(updatedBus);\n            Assert.Equal(\"Maintenance\", updatedBus.Status);"
  },
  {
    "File": "SecurityTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\SecurityTests.cs",
    "LineNumber": 248,
    "Column": 9275,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var vehicleId = BusRepository.AddBus(bus);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            // 2. Bus maintenance record access\n            var Bus = CreateTestVehicle(\"_AccessLog\");\n            var vehicleId = BusRepository.AddBus(bus);\n            TestVehicleIds.Add(vehicleId);\n"
  },
  {
    "File": "SecurityTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\SecurityTests.cs",
    "LineNumber": 249,
    "Column": 9345,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "TestVehicleIds.Add(vehicleId);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            var Bus = CreateTestVehicle(\"_AccessLog\");\n            var vehicleId = BusRepository.AddBus(bus);\n            TestVehicleIds.Add(vehicleId);\n\n            var accessedBus = BusRepository.GetBusById(vehicleId);"
  },
  {
    "File": "SecurityTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\SecurityTests.cs",
    "LineNumber": 251,
    "Column": 9413,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var accessedBus = BusRepository.GetBusById(vehicleId);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            TestVehicleIds.Add(vehicleId);\n\n            var accessedBus = BusRepository.GetBusById(vehicleId);\n            Assert.NotNull(accessedBus);\n"
  },
  {
    "File": "SecurityTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\SecurityTests.cs",
    "LineNumber": 281,
    "Column": 10351,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var vehicleId = BusRepository.AddBus(bus);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "\n            var Bus = CreateTestVehicle(\"_ConcurrencyTest\");\n            var vehicleId = BusRepository.AddBus(bus);\n            TestVehicleIds.Add(vehicleId);\n"
  },
  {
    "File": "SecurityTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\SecurityTests.cs",
    "LineNumber": 282,
    "Column": 10421,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "TestVehicleIds.Add(vehicleId);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            var Bus = CreateTestVehicle(\"_ConcurrencyTest\");\n            var vehicleId = BusRepository.AddBus(bus);\n            TestVehicleIds.Add(vehicleId);\n\n            // Simulate concurrent updates"
  },
  {
    "File": "SecurityTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\SecurityTests.cs",
    "LineNumber": 285,
    "Column": 10529,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var vehicle1 = BusRepository.GetBusById(vehicleId);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "\n            // Simulate concurrent updates\n            var vehicle1 = BusRepository.GetBusById(vehicleId);\n            var vehicle2 = BusRepository.GetBusById(vehicleId);\n"
  },
  {
    "File": "SecurityTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\SecurityTests.cs",
    "LineNumber": 286,
    "Column": 10593,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var vehicle2 = BusRepository.GetBusById(vehicleId);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            // Simulate concurrent updates\n            var vehicle1 = BusRepository.GetBusById(vehicleId);\n            var vehicle2 = BusRepository.GetBusById(vehicleId);\n\n            Assert.NotNull(vehicle1);"
  },
  {
    "File": "SecurityTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\SecurityTests.cs",
    "LineNumber": 300,
    "Column": 11021,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var finalBus = BusRepository.GetBusById(vehicleId);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "\n            // Verify final state\n            var finalBus = BusRepository.GetBusById(vehicleId);\n            Assert.NotNull(finalBus);\n"
  },
  {
    "File": "SecurityTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\SecurityTests.cs",
    "LineNumber": 322,
    "Column": 11828,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var vehicleId = BusRepository.AddBus(bus);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            try\n            {\n                var vehicleId = BusRepository.AddBus(bus);\n\n                if (vehicleId > 0)"
  },
  {
    "File": "SecurityTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\SecurityTests.cs",
    "LineNumber": 324,
    "Column": 11888,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "if (vehicleId > 0)",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "                var vehicleId = BusRepository.AddBus(bus);\n\n                if (vehicleId > 0)\n                {\n                    TestVehicleIds.Add(vehicleId);"
  },
  {
    "File": "SecurityTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\SecurityTests.cs",
    "LineNumber": 326,
    "Column": 11960,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "TestVehicleIds.Add(vehicleId);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "                if (vehicleId > 0)\n                {\n                    TestVehicleIds.Add(vehicleId);\n\n                    // If accepted, verify it was sanitized properly"
  },
  {
    "File": "SecurityTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\SecurityTests.cs",
    "LineNumber": 329,
    "Column": 12106,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var retrievedBus = BusRepository.GetBusById(vehicleId);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "\n                    // If accepted, verify it was sanitized properly\n                    var retrievedBus = BusRepository.GetBusById(vehicleId);\n                    Assert.NotNull(retrievedBus);\n"
  },
  {
    "File": "SecurityTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\SecurityTests.cs",
    "LineNumber": 27,
    "Column": 712,
    "Category": "API Issue",
    "Severity": "High",
    "Pattern": "VehicleRepository",
    "MatchedText": "VehicleRepository",
    "LineContent": "public void VehicleRepository_SqlInjection_ShouldBePreventedInSearch()",
    "SuggestedFix": "Should be BusRepository",
    "Context": "\n        [Fact]\n        public void VehicleRepository_SqlInjection_ShouldBePreventedInSearch()\n        {\n            _output.WriteLine(\"Testing SQL injection prevention in Bus search...\");"
  },
  {
    "File": "SecurityTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\SecurityTests.cs",
    "LineNumber": 32,
    "Column": 938,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "CreateTestVehicle",
    "MatchedText": "CreateTestVehicle",
    "LineContent": "var Bus = CreateTestVehicle(\"_SecurityTest\");",
    "SuggestedFix": "Method name - should be CreateTestBus",
    "Context": "\n            // Create a legitimate test Bus first\n            var Bus = CreateTestVehicle(\"_SecurityTest\");\n            var vehicleId = BusRepository.AddBus(bus);\n            TestVehicleIds.Add(vehicleId);"
  },
  {
    "File": "SecurityTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\SecurityTests.cs",
    "LineNumber": 171,
    "Column": 6521,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "CreateTestVehicle",
    "MatchedText": "CreateTestVehicle",
    "LineContent": "var Bus = CreateTestVehicle(\"_AccessControl\");",
    "SuggestedFix": "Method name - should be CreateTestBus",
    "Context": "            _output.WriteLine(\"Testing Bus data access control...\");\n\n            var Bus = CreateTestVehicle(\"_AccessControl\");\n            busVIN = \"CONFIDENTIAL123456789\";\n"
  },
  {
    "File": "SecurityTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\SecurityTests.cs",
    "LineNumber": 208,
    "Column": 7714,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "CreateTestVehicle",
    "MatchedText": "CreateTestVehicle",
    "LineContent": "var Bus = CreateTestVehicle(\"_AuditTest\");",
    "SuggestedFix": "Method name - should be CreateTestBus",
    "Context": "\n            // Create initial bus\n            var Bus = CreateTestVehicle(\"_AuditTest\");\n            var vehicleId = BusRepository.AddBus(bus);\n            TestVehicleIds.Add(vehicleId);"
  },
  {
    "File": "SecurityTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\SecurityTests.cs",
    "LineNumber": 247,
    "Column": 9226,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "CreateTestVehicle",
    "MatchedText": "CreateTestVehicle",
    "LineContent": "var Bus = CreateTestVehicle(\"_AccessLog\");",
    "SuggestedFix": "Method name - should be CreateTestBus",
    "Context": "\n            // 2. Bus maintenance record access\n            var Bus = CreateTestVehicle(\"_AccessLog\");\n            var vehicleId = BusRepository.AddBus(bus);\n            TestVehicleIds.Add(vehicleId);"
  },
  {
    "File": "SecurityTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\SecurityTests.cs",
    "LineNumber": 280,
    "Column": 10296,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "CreateTestVehicle",
    "MatchedText": "CreateTestVehicle",
    "LineContent": "var Bus = CreateTestVehicle(\"_ConcurrencyTest\");",
    "SuggestedFix": "Method name - should be CreateTestBus",
    "Context": "            _output.WriteLine(\"Testing data integrity under concurrent modifications...\");\n\n            var Bus = CreateTestVehicle(\"_ConcurrencyTest\");\n            var vehicleId = BusRepository.AddBus(bus);\n            TestVehicleIds.Add(vehicleId);"
  },
  {
    "File": "SecurityTests.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\SecurityTests.cs",
    "LineNumber": 315,
    "Column": 11577,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "CreateTestVehicle",
    "MatchedText": "CreateTestVehicle",
    "LineContent": "var Bus = CreateTestVehicle(\"_ValidationTest\");",
    "SuggestedFix": "Method name - should be CreateTestBus",
    "Context": "\n            // Test extremely long strings\n            var Bus = CreateTestVehicle(\"_ValidationTest\");\n            bus.VehicleNumber = new string('A', 1000); // Very long string\n            bus.Make = \"\"; // Empty string"
  },
  {
    "File": "SystemTestBase.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\SystemTestBase.cs",
    "LineNumber": 94,
    "Column": 3403,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "protected Route CreateTestRoute(int? vehicleId = null, int? driverId = null, string suffix = \"\")",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "        }\n\n        protected Route CreateTestRoute(int? vehicleId = null, int? driverId = null, string suffix = \"\")\n        {\n            var timestamp = DateTime.Now.Ticks;"
  },
  {
    "File": "SystemTestBase.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\SystemTestBase.cs",
    "LineNumber": 101,
    "Column": 3717,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "AMVehicleID = vehicleId,",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "                RouteName = $\"TestRoute{timestamp}{suffix}\",\n                Date = DateTime.Today.ToString(\"yyyy-MM-dd\"),\n                AMVehicleID = vehicleId,\n                AMDriverID = driverId,\n                AMBeginMiles = 1000,"
  },
  {
    "File": "SystemTestBase.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\SystemTestBase.cs",
    "LineNumber": 60,
    "Column": 2200,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "CreateTestVehicle",
    "MatchedText": "CreateTestVehicle",
    "LineContent": "protected Bus CreateTestVehicle(string suffix = \"\")",
    "SuggestedFix": "Method name - should be CreateTestBus",
    "Context": "        }\n\n        protected Bus CreateTestVehicle(string suffix = \"\")\n        {\n            var timestamp = DateTime.Now.Ticks;"
  },
  {
    "File": "TestDataFactory.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\TestDataFactory.cs",
    "LineNumber": 101,
    "Column": 4221,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "/// <param name=\"vehicleId\">ID of the assigned bus</param>",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "        /// </summary>\n        /// <param name=\"stops\">Number of stops on the route</param>\n        /// <param name=\"vehicleId\">ID of the assigned bus</param>\n        /// <param name=\"driverId\">ID of the assigned driver</param>\n        /// <param name=\"suffix\">Optional suffix for unique identification</param>"
  },
  {
    "File": "TestDataFactory.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\TestDataFactory.cs",
    "LineNumber": 105,
    "Column": 4546,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "public static Route CreateComplexRoute(int stops, int? vehicleId = null, int? driverId = null, string suffix = \"\")",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "        /// <param name=\"suffix\">Optional suffix for unique identification</param>\n        /// <returns>Route with detailed stop information</returns>\n        public static Route CreateComplexRoute(int stops, int? vehicleId = null, int? driverId = null, string suffix = \"\")\n        {\n            var timestamp = DateTime.Now.Ticks;"
  },
  {
    "File": "TestDataFactory.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\TestDataFactory.cs",
    "LineNumber": 112,
    "Column": 4868,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "AMVehicleID = vehicleId,",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "                RouteName = $\"ComplexRoute{timestamp}{suffix}\",\n                Date = DateTime.Today.ToString(\"yyyy-MM-dd\"),\n                AMVehicleID = vehicleId,\n                AMDriverID = driverId,\n                RouteType = \"CDL\","
  },
  {
    "File": "TestDataFactory.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\TestDataFactory.cs",
    "LineNumber": 122,
    "Column": 5224,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "PMVehicleID = vehicleId,",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "\n                // PM Route data\n                PMVehicleID = vehicleId,\n                PMDriverID = driverId,\n                PMBeginMiles = 0, // Will be set from AM end"
  },
  {
    "File": "TestDataFactory.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\TestDataFactory.cs",
    "LineNumber": 143,
    "Column": 6045,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "/// <param name=\"vehicleIds\">Available Bus IDs</param>",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "        /// Creates a set of routes covering a date range for analytics testing.\n        /// </summary>\n        /// <param name=\"vehicleIds\">Available Bus IDs</param>\n        /// <param name=\"driverIds\">Available driver IDs</param>\n        /// <param name=\"startDate\">Start date for route coverage</param>"
  },
  {
    "File": "TestDataFactory.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\TestDataFactory.cs",
    "LineNumber": 148,
    "Column": 6431,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "public static List<Route> CreateRouteHistory(List<int> vehicleIds, List<int> driverIds, DateTime startDate, DateTime endDate)",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "        /// <param name=\"endDate\">End date for route coverage</param>\n        /// <returns>List of routes covering the specified period</returns>\n        public static List<Route> CreateRouteHistory(List<int> vehicleIds, List<int> driverIds, DateTime startDate, DateTime endDate)\n        {\n            var routes = new List<Route>();"
  },
  {
    "File": "TestDataFactory.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\TestDataFactory.cs",
    "LineNumber": 159,
    "Column": 6943,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "for (int i = 0; i < Math.Min(vehicleIds.Count, driverIds.Count); i++)",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "                {\n                    // Create routes for available vehicles\n                    for (int i = 0; i < Math.Min(vehicleIds.Count, driverIds.Count); i++)\n                    {\n                        var route = new Route"
  },
  {
    "File": "TestDataFactory.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\TestDataFactory.cs",
    "LineNumber": 165,
    "Column": 7268,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "AMVehicleID = vehicleIds[i],",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "                            RouteName = $\"Route_{currentDate:yyyyMMdd}_{i}\",\n                            Date = currentDate.ToString(\"yyyy-MM-dd\"),\n                            AMVehicleID = vehicleIds[i],\n                            AMDriverID = driverIds[i],\n                            PMVehicleID = vehicleIds[i],"
  },
  {
    "File": "TestDataFactory.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\TestDataFactory.cs",
    "LineNumber": 167,
    "Column": 7380,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "PMVehicleID = vehicleIds[i],",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "                            AMVehicleID = vehicleIds[i],\n                            AMDriverID = driverIds[i],\n                            PMVehicleID = vehicleIds[i],\n                            PMDriverID = driverIds[i],\n                            RouteType = \"CDL\","
  },
  {
    "File": "TestDataFactory.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\TestDataFactory.cs",
    "LineNumber": 234,
    "Column": 10130,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "/// <param name=\"vehicleId\">Bus ID for fuel records</param>",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "        /// Creates fuel records for a Bus over the specified number of months.\n        /// </summary>\n        /// <param name=\"vehicleId\">Bus ID for fuel records</param>\n        /// <param name=\"months\">Number of months of fuel history</param>\n        /// <returns>List of fuel records with realistic data</returns>"
  },
  {
    "File": "TestDataFactory.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\TestDataFactory.cs",
    "LineNumber": 237,
    "Column": 10374,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "public static List<Fuel> CreateFuelHistory(int vehicleId, int months)",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "        /// <param name=\"months\">Number of months of fuel history</param>\n        /// <returns>List of fuel records with realistic data</returns>\n        public static List<Fuel> CreateFuelHistory(int vehicleId, int months)\n        {\n            var fuelRecords = new List<Fuel>();"
  },
  {
    "File": "TestDataFactory.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\TestDataFactory.cs",
    "LineNumber": 255,
    "Column": 11216,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "VehicleFueledID = vehicleId,",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "                    var fuelRecord = new Fuel\n                    {\n                        VehicleFueledID = vehicleId,\n                        FuelDate = fuelDate.ToString(\"yyyy-MM-dd\"),\n                        FuelLocation = fuelStations[fuel % fuelStations.Length],"
  },
  {
    "File": "ValidationServiceTest.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ValidationServiceTest.cs",
    "LineNumber": 61,
    "Column": 1989,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var vehicleId = _vehicleRepository.AddBus(testBus);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            var testBus = CreateTestVehicle();\n            testBus.Status = \"Active\";\n            var vehicleId = _vehicleRepository.AddBus(testBus);\n            _testVehicleIds.Add(vehicleId);\n"
  },
  {
    "File": "ValidationServiceTest.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ValidationServiceTest.cs",
    "LineNumber": 62,
    "Column": 2069,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "_testVehicleIds.Add(vehicleId);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            testBus.Status = \"Active\";\n            var vehicleId = _vehicleRepository.AddBus(testBus);\n            _testVehicleIds.Add(vehicleId);\n\n            // Act"
  },
  {
    "File": "ValidationServiceTest.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ValidationServiceTest.cs",
    "LineNumber": 65,
    "Column": 2169,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var result = _validationService.ValidateBusAvailability(vehicleId, DateTime.Today, \"test operation\");",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "\n            // Act\n            var result = _validationService.ValidateBusAvailability(vehicleId, DateTime.Today, \"test operation\");\n\n            // Assert"
  },
  {
    "File": "ValidationServiceTest.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ValidationServiceTest.cs",
    "LineNumber": 88,
    "Column": 2938,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var vehicleId = _vehicleRepository.AddBus(testBus);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            var testBus = CreateTestVehicle();\n            testBus.Status = \"Out of Service\";\n            var vehicleId = _vehicleRepository.AddBus(testBus);\n            _testVehicleIds.Add(vehicleId);\n"
  },
  {
    "File": "ValidationServiceTest.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ValidationServiceTest.cs",
    "LineNumber": 89,
    "Column": 3018,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "_testVehicleIds.Add(vehicleId);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            testBus.Status = \"Out of Service\";\n            var vehicleId = _vehicleRepository.AddBus(testBus);\n            _testVehicleIds.Add(vehicleId);\n\n            // Act"
  },
  {
    "File": "ValidationServiceTest.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ValidationServiceTest.cs",
    "LineNumber": 92,
    "Column": 3118,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var result = _validationService.ValidateBusAvailability(vehicleId, DateTime.Today, \"test operation\");",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "\n            // Act\n            var result = _validationService.ValidateBusAvailability(vehicleId, DateTime.Today, \"test operation\");\n\n            // Assert"
  },
  {
    "File": "ValidationServiceTest.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ValidationServiceTest.cs",
    "LineNumber": 165,
    "Column": 5641,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var vehicleId = _vehicleRepository.AddBus(testBus);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            var testBus = CreateTestVehicle();\n            testBus.Status = \"Active\";\n            var vehicleId = _vehicleRepository.AddBus(testBus);\n            _testVehicleIds.Add(vehicleId);\n"
  },
  {
    "File": "ValidationServiceTest.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ValidationServiceTest.cs",
    "LineNumber": 166,
    "Column": 5721,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "_testVehicleIds.Add(vehicleId);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            testBus.Status = \"Active\";\n            var vehicleId = _vehicleRepository.AddBus(testBus);\n            _testVehicleIds.Add(vehicleId);\n\n            var fuelRecord = new Fuel"
  },
  {
    "File": "ValidationServiceTest.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ValidationServiceTest.cs",
    "LineNumber": 172,
    "Column": 5933,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "VehicleFueledID = vehicleId,",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "                FuelDate = DateTime.Today.ToString(\"yyyy-MM-dd\"),\n                FuelLocation = \"Test Station\",\n                VehicleFueledID = vehicleId,\n                FuelAmount = 25.5m,\n                FuelCost = 87.98m,"
  },
  {
    "File": "ValidationServiceTest.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ValidationServiceTest.cs",
    "LineNumber": 227,
    "Column": 7579,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "var vehicleId = _vehicleRepository.AddBus(testBus);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            var testBus = CreateTestVehicle();\n            testBus.Status = \"Active\";\n            var vehicleId = _vehicleRepository.AddBus(testBus);\n            _testVehicleIds.Add(vehicleId);\n"
  },
  {
    "File": "ValidationServiceTest.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ValidationServiceTest.cs",
    "LineNumber": 228,
    "Column": 7659,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "_testVehicleIds.Add(vehicleId);",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            testBus.Status = \"Active\";\n            var vehicleId = _vehicleRepository.AddBus(testBus);\n            _testVehicleIds.Add(vehicleId);\n\n            var maintenanceRecord = new Maintenance"
  },
  {
    "File": "ValidationServiceTest.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ValidationServiceTest.cs",
    "LineNumber": 233,
    "Column": 7828,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "vehicleId",
    "MatchedText": "vehicleId",
    "LineContent": "VehicleID = vehicleId,",
    "SuggestedFix": "Variable name - should be busId",
    "Context": "            {\n                Date = DateTime.Today.ToString(\"yyyy-MM-dd\"),\n                VehicleID = vehicleId,\n                MaintenanceCompleted = \"Oil Change\",\n                RepairCost = 75.00m,"
  },
  {
    "File": "ValidationServiceTest.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ValidationServiceTest.cs",
    "LineNumber": 22,
    "Column": 756,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "_testVehicleIds",
    "MatchedText": "_testVehicleIds",
    "LineContent": "private readonly List<int> _testVehicleIds;",
    "SuggestedFix": "Collection name - should be _testBusIds",
    "Context": "        private readonly BusRepository _vehicleRepository;\n        private readonly DriverRepository _driverRepository;\n        private readonly List<int> _testVehicleIds;\n        private readonly List<int> _testDriverIds;\n"
  },
  {
    "File": "ValidationServiceTest.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ValidationServiceTest.cs",
    "LineNumber": 36,
    "Column": 1247,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "_testVehicleIds",
    "MatchedText": "_testVehicleIds",
    "LineContent": "_testVehicleIds = new List<int>();",
    "SuggestedFix": "Collection name - should be _testBusIds",
    "Context": "                new FuelRepository());\n\n            _testVehicleIds = new List<int>();\n            _testDriverIds = new List<int>();\n        }"
  },
  {
    "File": "ValidationServiceTest.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ValidationServiceTest.cs",
    "LineNumber": 43,
    "Column": 1443,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "_testVehicleIds",
    "MatchedText": "_testVehicleIds",
    "LineContent": "foreach (var id in _testVehicleIds)",
    "SuggestedFix": "Collection name - should be _testBusIds",
    "Context": "        {\n            // Cleanup test data\n            foreach (var id in _testVehicleIds)\n            {\n                try { _vehicleRepository.DeleteBus(id); } catch { }"
  },
  {
    "File": "ValidationServiceTest.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ValidationServiceTest.cs",
    "LineNumber": 62,
    "Column": 2049,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "_testVehicleIds",
    "MatchedText": "_testVehicleIds",
    "LineContent": "_testVehicleIds.Add(vehicleId);",
    "SuggestedFix": "Collection name - should be _testBusIds",
    "Context": "            testBus.Status = \"Active\";\n            var vehicleId = _vehicleRepository.AddBus(testBus);\n            _testVehicleIds.Add(vehicleId);\n\n            // Act"
  },
  {
    "File": "ValidationServiceTest.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ValidationServiceTest.cs",
    "LineNumber": 89,
    "Column": 2998,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "_testVehicleIds",
    "MatchedText": "_testVehicleIds",
    "LineContent": "_testVehicleIds.Add(vehicleId);",
    "SuggestedFix": "Collection name - should be _testBusIds",
    "Context": "            testBus.Status = \"Out of Service\";\n            var vehicleId = _vehicleRepository.AddBus(testBus);\n            _testVehicleIds.Add(vehicleId);\n\n            // Act"
  },
  {
    "File": "ValidationServiceTest.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ValidationServiceTest.cs",
    "LineNumber": 166,
    "Column": 5701,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "_testVehicleIds",
    "MatchedText": "_testVehicleIds",
    "LineContent": "_testVehicleIds.Add(vehicleId);",
    "SuggestedFix": "Collection name - should be _testBusIds",
    "Context": "            testBus.Status = \"Active\";\n            var vehicleId = _vehicleRepository.AddBus(testBus);\n            _testVehicleIds.Add(vehicleId);\n\n            var fuelRecord = new Fuel"
  },
  {
    "File": "ValidationServiceTest.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ValidationServiceTest.cs",
    "LineNumber": 228,
    "Column": 7639,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "_testVehicleIds",
    "MatchedText": "_testVehicleIds",
    "LineContent": "_testVehicleIds.Add(vehicleId);",
    "SuggestedFix": "Collection name - should be _testBusIds",
    "Context": "            testBus.Status = \"Active\";\n            var vehicleId = _vehicleRepository.AddBus(testBus);\n            _testVehicleIds.Add(vehicleId);\n\n            var maintenanceRecord = new Maintenance"
  },
  {
    "File": "ValidationServiceTest.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ValidationServiceTest.cs",
    "LineNumber": 59,
    "Column": 1913,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "CreateTestVehicle",
    "MatchedText": "CreateTestVehicle",
    "LineContent": "var testBus = CreateTestVehicle();",
    "SuggestedFix": "Method name - should be CreateTestBus",
    "Context": "        {\n            // Arrange\n            var testBus = CreateTestVehicle();\n            testBus.Status = \"Active\";\n            var vehicleId = _vehicleRepository.AddBus(testBus);"
  },
  {
    "File": "ValidationServiceTest.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ValidationServiceTest.cs",
    "LineNumber": 86,
    "Column": 2854,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "CreateTestVehicle",
    "MatchedText": "CreateTestVehicle",
    "LineContent": "var testBus = CreateTestVehicle();",
    "SuggestedFix": "Method name - should be CreateTestBus",
    "Context": "        {\n            // Arrange\n            var testBus = CreateTestVehicle();\n            testBus.Status = \"Out of Service\";\n            var vehicleId = _vehicleRepository.AddBus(testBus);"
  },
  {
    "File": "ValidationServiceTest.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ValidationServiceTest.cs",
    "LineNumber": 163,
    "Column": 5565,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "CreateTestVehicle",
    "MatchedText": "CreateTestVehicle",
    "LineContent": "var testBus = CreateTestVehicle();",
    "SuggestedFix": "Method name - should be CreateTestBus",
    "Context": "        {\n            // Arrange\n            var testBus = CreateTestVehicle();\n            testBus.Status = \"Active\";\n            var vehicleId = _vehicleRepository.AddBus(testBus);"
  },
  {
    "File": "ValidationServiceTest.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ValidationServiceTest.cs",
    "LineNumber": 225,
    "Column": 7503,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "CreateTestVehicle",
    "MatchedText": "CreateTestVehicle",
    "LineContent": "var testBus = CreateTestVehicle();",
    "SuggestedFix": "Method name - should be CreateTestBus",
    "Context": "        {\n            // Arrange\n            var testBus = CreateTestVehicle();\n            testBus.Status = \"Active\";\n            var vehicleId = _vehicleRepository.AddBus(testBus);"
  },
  {
    "File": "ValidationServiceTest.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ValidationServiceTest.cs",
    "LineNumber": 301,
    "Column": 9905,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "CreateTestVehicle",
    "MatchedText": "CreateTestVehicle",
    "LineContent": "private Bus CreateTestVehicle()",
    "SuggestedFix": "Method name - should be CreateTestBus",
    "Context": "        #region Helper Methods\n\n        private Bus CreateTestVehicle()\n        {\n            var timestamp = DateTime.Now.Ticks;"
  },
  {
    "File": "ValidationServiceTest.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ValidationServiceTest.cs",
    "LineNumber": 56,
    "Column": 1787,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "ValidateVehicleAvailability",
    "MatchedText": "ValidateVehicleAvailability",
    "LineContent": "public void ValidateVehicleAvailability_WithValidVehicle_ShouldReturnSuccess()",
    "SuggestedFix": "API method - should be ValidateBusAvailability",
    "Context": "\n        [Fact]\n        public void ValidateVehicleAvailability_WithValidVehicle_ShouldReturnSuccess()\n        {\n            // Arrange"
  },
  {
    "File": "ValidationServiceTest.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ValidationServiceTest.cs",
    "LineNumber": 72,
    "Column": 2325,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "ValidateVehicleAvailability",
    "MatchedText": "ValidateVehicleAvailability",
    "LineContent": "public void ValidateVehicleAvailability_WithNonExistentVehicle_ShouldReturnFailure()",
    "SuggestedFix": "API method - should be ValidateBusAvailability",
    "Context": "\n        [Fact]\n        public void ValidateVehicleAvailability_WithNonExistentVehicle_ShouldReturnFailure()\n        {\n            // Act"
  },
  {
    "File": "ValidationServiceTest.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ValidationServiceTest.cs",
    "LineNumber": 83,
    "Column": 2721,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "ValidateVehicleAvailability",
    "MatchedText": "ValidateVehicleAvailability",
    "LineContent": "public void ValidateVehicleAvailability_WithOutOfServiceVehicle_ShouldReturnFailure()",
    "SuggestedFix": "API method - should be ValidateBusAvailability",
    "Context": "\n        [Fact]\n        public void ValidateVehicleAvailability_WithOutOfServiceVehicle_ShouldReturnFailure()\n        {\n            // Arrange"
  },
  {
    "File": "ValidationServiceTest.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ValidationServiceTest.cs",
    "LineNumber": 22,
    "Column": 757,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "testVehicle",
    "MatchedText": "testVehicle",
    "LineContent": "private readonly List<int> _testVehicleIds;",
    "SuggestedFix": "Variable name - should be testBus",
    "Context": "        private readonly BusRepository _vehicleRepository;\n        private readonly DriverRepository _driverRepository;\n        private readonly List<int> _testVehicleIds;\n        private readonly List<int> _testDriverIds;\n"
  },
  {
    "File": "ValidationServiceTest.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ValidationServiceTest.cs",
    "LineNumber": 36,
    "Column": 1248,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "testVehicle",
    "MatchedText": "testVehicle",
    "LineContent": "_testVehicleIds = new List<int>();",
    "SuggestedFix": "Variable name - should be testBus",
    "Context": "                new FuelRepository());\n\n            _testVehicleIds = new List<int>();\n            _testDriverIds = new List<int>();\n        }"
  },
  {
    "File": "ValidationServiceTest.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ValidationServiceTest.cs",
    "LineNumber": 43,
    "Column": 1444,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "testVehicle",
    "MatchedText": "testVehicle",
    "LineContent": "foreach (var id in _testVehicleIds)",
    "SuggestedFix": "Variable name - should be testBus",
    "Context": "        {\n            // Cleanup test data\n            foreach (var id in _testVehicleIds)\n            {\n                try { _vehicleRepository.DeleteBus(id); } catch { }"
  },
  {
    "File": "ValidationServiceTest.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ValidationServiceTest.cs",
    "LineNumber": 62,
    "Column": 2050,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "testVehicle",
    "MatchedText": "testVehicle",
    "LineContent": "_testVehicleIds.Add(vehicleId);",
    "SuggestedFix": "Variable name - should be testBus",
    "Context": "            testBus.Status = \"Active\";\n            var vehicleId = _vehicleRepository.AddBus(testBus);\n            _testVehicleIds.Add(vehicleId);\n\n            // Act"
  },
  {
    "File": "ValidationServiceTest.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ValidationServiceTest.cs",
    "LineNumber": 89,
    "Column": 2999,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "testVehicle",
    "MatchedText": "testVehicle",
    "LineContent": "_testVehicleIds.Add(vehicleId);",
    "SuggestedFix": "Variable name - should be testBus",
    "Context": "            testBus.Status = \"Out of Service\";\n            var vehicleId = _vehicleRepository.AddBus(testBus);\n            _testVehicleIds.Add(vehicleId);\n\n            // Act"
  },
  {
    "File": "ValidationServiceTest.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ValidationServiceTest.cs",
    "LineNumber": 166,
    "Column": 5702,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "testVehicle",
    "MatchedText": "testVehicle",
    "LineContent": "_testVehicleIds.Add(vehicleId);",
    "SuggestedFix": "Variable name - should be testBus",
    "Context": "            testBus.Status = \"Active\";\n            var vehicleId = _vehicleRepository.AddBus(testBus);\n            _testVehicleIds.Add(vehicleId);\n\n            var fuelRecord = new Fuel"
  },
  {
    "File": "ValidationServiceTest.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ValidationServiceTest.cs",
    "LineNumber": 228,
    "Column": 7640,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "testVehicle",
    "MatchedText": "testVehicle",
    "LineContent": "_testVehicleIds.Add(vehicleId);",
    "SuggestedFix": "Variable name - should be testBus",
    "Context": "            testBus.Status = \"Active\";\n            var vehicleId = _vehicleRepository.AddBus(testBus);\n            _testVehicleIds.Add(vehicleId);\n\n            var maintenanceRecord = new Maintenance"
  },
  {
    "File": "ValidationServiceTest.cs",
    "FullPath": "C:\\Users\\steve.mckitrick\\Desktop\\BusBuddy\\BusBuddy.UI.Tests\\ValidationServiceTest.cs",
    "LineNumber": 288,
    "Column": 9546,
    "Category": "Naming Issue",
    "Severity": "Low",
    "Pattern": "IsValidVehicleNumber",
    "MatchedText": "IsValidVehicleNumber",
    "LineContent": "public void IsValidVehicleNumber_WithVariousInputs_ShouldReturnExpectedResult(string vehicleNumber, bool expected)",
    "SuggestedFix": "API method - should be IsValidBusNumber",
    "Context": "        [InlineData(\"\", false)] // Empty\n        [InlineData(null, false)] // Null\n        public void IsValidVehicleNumber_WithVariousInputs_ShouldReturnExpectedResult(string vehicleNumber, bool expected)\n        {\n            // Act"
  }
]
