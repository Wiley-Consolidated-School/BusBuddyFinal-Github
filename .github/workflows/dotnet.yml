name: .NET Build and Test

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:  # Allow manual triggering

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
        
    - name: List repository contents
      run: |
        dir
        if (Test-Path "BusBuddy.sln") { Write-Host "Solution file found in root" } else { Write-Host "Solution file not found in root" }
        
    - name: Find solution file
      run: |
        Get-ChildItem -Path . -Filter *.sln -Recurse
        
    - name: Cache NuGet packages
      uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
        restore-keys: |
          ${{ runner.os }}-nuget-
        
    - name: Restore dependencies
      run: |
        $solutionPath = (Get-ChildItem -Path . -Filter *.sln -Recurse | Select-Object -First 1).FullName
        Write-Host "Found solution at $solutionPath"
        dotnet restore $solutionPath
      
    - name: Build
      run: |
        $solutionPath = (Get-ChildItem -Path . -Filter *.sln -Recurse | Select-Object -First 1).FullName
        dotnet build $solutionPath --no-restore --configuration Release
    
    - name: Publish Application
      run: |
        $solutionPath = (Get-ChildItem -Path . -Filter *.sln -Recurse | Select-Object -First 1).FullName
        dotnet publish $solutionPath -c Release --no-build -o publish
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: BusBuddy-app
        path: publish/**
        retention-days: 7
      
    - name: Find test projects
      run: |
        Get-ChildItem -Path . -Filter *Tests.csproj -Recurse
        
    - name: Test
      run: |
        $testProject = (Get-ChildItem -Path . -Filter *Tests.csproj -Recurse | Select-Object -First 1).FullName
        Write-Host "Running tests for $testProject"
        dotnet test $testProject --configuration Release --verbosity normal --logger "trx;LogFileName=test-results.trx"
      
    - name: Test Report
      uses: dorny/test-reporter@v1
      if: success() || failure()
      with:
        name: XUnit Tests
        path: "**/test-results.trx"
        reporter: dotnet-trx
        
    - name: Create Test Summary
      if: always()
      run: |
        Write-Host "## Build and Test Summary" | Out-File -FilePath $env:GITHUB_STEP_SUMMARY -Append
        Write-Host "âœ… Build completed" | Out-File -FilePath $env:GITHUB_STEP_SUMMARY -Append
        Write-Host "ðŸ“Š Test results available in the Artifacts section" | Out-File -FilePath $env:GITHUB_STEP_SUMMARY -Append
